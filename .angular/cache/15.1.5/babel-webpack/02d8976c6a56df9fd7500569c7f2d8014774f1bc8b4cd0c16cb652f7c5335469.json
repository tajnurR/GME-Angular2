{"ast":null,"code":"/*\r\n * Copyright 2008 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nimport StringBuilder from '../../util/StringBuilder';\n/**\r\n * @author satorux@google.com (Satoru Takabayashi) - creator\r\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\r\n */\nvar QRCode = /** @class */function () {\n  function QRCode() {\n    this.maskPattern = -1;\n  }\n  QRCode.prototype.getMode = function () {\n    return this.mode;\n  };\n  QRCode.prototype.getECLevel = function () {\n    return this.ecLevel;\n  };\n  QRCode.prototype.getVersion = function () {\n    return this.version;\n  };\n  QRCode.prototype.getMaskPattern = function () {\n    return this.maskPattern;\n  };\n  QRCode.prototype.getMatrix = function () {\n    return this.matrix;\n  };\n  /*@Override*/\n  QRCode.prototype.toString = function () {\n    var result = new StringBuilder(); // (200)\n    result.append('<<\\n');\n    result.append(' mode: ');\n    result.append(this.mode ? this.mode.toString() : 'null');\n    result.append('\\n ecLevel: ');\n    result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n    result.append('\\n version: ');\n    result.append(this.version ? this.version.toString() : 'null');\n    result.append('\\n maskPattern: ');\n    result.append(this.maskPattern.toString());\n    if (this.matrix) {\n      result.append('\\n matrix:\\n');\n      result.append(this.matrix.toString());\n    } else {\n      result.append('\\n matrix: null\\n');\n    }\n    result.append('>>\\n');\n    return result.toString();\n  };\n  QRCode.prototype.setMode = function (value) {\n    this.mode = value;\n  };\n  QRCode.prototype.setECLevel = function (value) {\n    this.ecLevel = value;\n  };\n  QRCode.prototype.setVersion = function (version) {\n    this.version = version;\n  };\n  QRCode.prototype.setMaskPattern = function (value /*int*/) {\n    this.maskPattern = value;\n  };\n  QRCode.prototype.setMatrix = function (value) {\n    this.matrix = value;\n  };\n  // Check if \"mask_pattern\" is valid.\n  QRCode.isValidMaskPattern = function (maskPattern /*int*/) {\n    return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n  };\n  QRCode.NUM_MASK_PATTERNS = 8;\n  return QRCode;\n}();\nexport default QRCode;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}