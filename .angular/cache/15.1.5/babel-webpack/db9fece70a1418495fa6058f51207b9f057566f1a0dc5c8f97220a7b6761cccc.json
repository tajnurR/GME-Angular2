{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { DecodeHintType, MultiFormatReader } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\nvar BrowserMultiFormatReader = /** @class */function (_super) {\n  __extends(BrowserMultiFormatReader, _super);\n  function BrowserMultiFormatReader(hints, options) {\n    var _this = this;\n    var reader = new MultiFormatReader();\n    reader.setHints(hints);\n    _this = _super.call(this, reader, hints, options) || this;\n    _this.reader = reader;\n    return _this;\n  }\n  Object.defineProperty(BrowserMultiFormatReader.prototype, \"possibleFormats\", {\n    set: function (formats) {\n      this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n      this.reader.setHints(this.hints);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Overwrite decodeBitmap to call decodeWithState, which will pay\n   * attention to the hints set in the constructor function\n   */\n  BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decodeWithState(binaryBitmap);\n  };\n  /**\n   * Allows to change hints in runtime.\n   */\n  BrowserMultiFormatReader.prototype.setHints = function (hints) {\n    this.hints = hints;\n    this.reader.setHints(this.hints);\n  };\n  return BrowserMultiFormatReader;\n}(BrowserCodeReader);\nexport { BrowserMultiFormatReader };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","DecodeHintType","MultiFormatReader","BrowserCodeReader","BrowserMultiFormatReader","_super","hints","options","_this","reader","setHints","defineProperty","set","formats","POSSIBLE_FORMATS","enumerable","configurable","decodeBitmap","binaryBitmap","decodeWithState"],"sources":["E:/GME/Angular/GME-Angular/node_modules/@zxing/browser/esm/readers/BrowserMultiFormatReader.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DecodeHintType, MultiFormatReader, } from '@zxing/library';\nimport { BrowserCodeReader } from './BrowserCodeReader';\nvar BrowserMultiFormatReader = /** @class */ (function (_super) {\n    __extends(BrowserMultiFormatReader, _super);\n    function BrowserMultiFormatReader(hints, options) {\n        var _this = this;\n        var reader = new MultiFormatReader();\n        reader.setHints(hints);\n        _this = _super.call(this, reader, hints, options) || this;\n        _this.reader = reader;\n        return _this;\n    }\n    Object.defineProperty(BrowserMultiFormatReader.prototype, \"possibleFormats\", {\n        set: function (formats) {\n            this.hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n            this.reader.setHints(this.hints);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Overwrite decodeBitmap to call decodeWithState, which will pay\n     * attention to the hints set in the constructor function\n     */\n    BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n        return this.reader.decodeWithState(binaryBitmap);\n    };\n    /**\n     * Allows to change hints in runtime.\n     */\n    BrowserMultiFormatReader.prototype.setHints = function (hints) {\n        this.hints = hints;\n        this.reader.setHints(this.hints);\n    };\n    return BrowserMultiFormatReader;\n}(BrowserCodeReader));\nexport { BrowserMultiFormatReader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}