{"ast":null,"code":"import * as C from './EncoderConstants';\nimport Arrays from '../../util/Arrays';\nimport StringUtils from '../../common/StringUtils';\nexport function static_CHAR_MAP(CHAR_MAP) {\n  var spaceCharCode = StringUtils.getCharCode(' ');\n  var pointCharCode = StringUtils.getCharCode('.');\n  var commaCharCode = StringUtils.getCharCode(',');\n  CHAR_MAP[C.MODE_UPPER][spaceCharCode] = 1;\n  var zUpperCharCode = StringUtils.getCharCode('Z');\n  var aUpperCharCode = StringUtils.getCharCode('A');\n  for (var c = aUpperCharCode; c <= zUpperCharCode; c++) {\n    CHAR_MAP[C.MODE_UPPER][c] = c - aUpperCharCode + 2;\n  }\n  CHAR_MAP[C.MODE_LOWER][spaceCharCode] = 1;\n  var zLowerCharCode = StringUtils.getCharCode('z');\n  var aLowerCharCode = StringUtils.getCharCode('a');\n  for (var c = aLowerCharCode; c <= zLowerCharCode; c++) {\n    CHAR_MAP[C.MODE_LOWER][c] = c - aLowerCharCode + 2;\n  }\n  CHAR_MAP[C.MODE_DIGIT][spaceCharCode] = 1;\n  var nineCharCode = StringUtils.getCharCode('9');\n  var zeroCharCode = StringUtils.getCharCode('0');\n  for (var c = zeroCharCode; c <= nineCharCode; c++) {\n    CHAR_MAP[C.MODE_DIGIT][c] = c - zeroCharCode + 2;\n  }\n  CHAR_MAP[C.MODE_DIGIT][commaCharCode] = 12;\n  CHAR_MAP[C.MODE_DIGIT][pointCharCode] = 13;\n  var mixedTable = ['\\x00', ' ', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07', '\\b', '\\t', '\\n', '\\x0b', '\\f', '\\r', '\\x1b', '\\x1c', '\\x1d', '\\x1e', '\\x1f', '@', '\\\\', '^', '_', '`', '|', '~', '\\x7f'];\n  for (var i = 0; i < mixedTable.length; i++) {\n    CHAR_MAP[C.MODE_MIXED][StringUtils.getCharCode(mixedTable[i])] = i;\n  }\n  var punctTable = ['\\x00', '\\r', '\\x00', '\\x00', '\\x00', '\\x00', '!', '\\'', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', ']', '{', '}'];\n  for (var i = 0; i < punctTable.length; i++) {\n    if (StringUtils.getCharCode(punctTable[i]) > 0) {\n      CHAR_MAP[C.MODE_PUNCT][StringUtils.getCharCode(punctTable[i])] = i;\n    }\n  }\n  return CHAR_MAP;\n}\nexport var CHAR_MAP = static_CHAR_MAP(Arrays.createInt32Array(5, 256));","map":{"version":3,"names":["C","Arrays","StringUtils","static_CHAR_MAP","CHAR_MAP","spaceCharCode","getCharCode","pointCharCode","commaCharCode","MODE_UPPER","zUpperCharCode","aUpperCharCode","c","MODE_LOWER","zLowerCharCode","aLowerCharCode","MODE_DIGIT","nineCharCode","zeroCharCode","mixedTable","i","length","MODE_MIXED","punctTable","MODE_PUNCT","createInt32Array"],"sources":["D:/Git/GME-Angular2/node_modules/@zxing/library/esm/core/aztec/encoder/CharMap.js"],"sourcesContent":["import * as C from './EncoderConstants';\r\nimport Arrays from '../../util/Arrays';\r\nimport StringUtils from '../../common/StringUtils';\r\nexport function static_CHAR_MAP(CHAR_MAP) {\r\n    var spaceCharCode = StringUtils.getCharCode(' ');\r\n    var pointCharCode = StringUtils.getCharCode('.');\r\n    var commaCharCode = StringUtils.getCharCode(',');\r\n    CHAR_MAP[C.MODE_UPPER][spaceCharCode] = 1;\r\n    var zUpperCharCode = StringUtils.getCharCode('Z');\r\n    var aUpperCharCode = StringUtils.getCharCode('A');\r\n    for (var c = aUpperCharCode; c <= zUpperCharCode; c++) {\r\n        CHAR_MAP[C.MODE_UPPER][c] = c - aUpperCharCode + 2;\r\n    }\r\n    CHAR_MAP[C.MODE_LOWER][spaceCharCode] = 1;\r\n    var zLowerCharCode = StringUtils.getCharCode('z');\r\n    var aLowerCharCode = StringUtils.getCharCode('a');\r\n    for (var c = aLowerCharCode; c <= zLowerCharCode; c++) {\r\n        CHAR_MAP[C.MODE_LOWER][c] = c - aLowerCharCode + 2;\r\n    }\r\n    CHAR_MAP[C.MODE_DIGIT][spaceCharCode] = 1;\r\n    var nineCharCode = StringUtils.getCharCode('9');\r\n    var zeroCharCode = StringUtils.getCharCode('0');\r\n    for (var c = zeroCharCode; c <= nineCharCode; c++) {\r\n        CHAR_MAP[C.MODE_DIGIT][c] = c - zeroCharCode + 2;\r\n    }\r\n    CHAR_MAP[C.MODE_DIGIT][commaCharCode] = 12;\r\n    CHAR_MAP[C.MODE_DIGIT][pointCharCode] = 13;\r\n    var mixedTable = [\r\n        '\\x00',\r\n        ' ',\r\n        '\\x01',\r\n        '\\x02',\r\n        '\\x03',\r\n        '\\x04',\r\n        '\\x05',\r\n        '\\x06',\r\n        '\\x07',\r\n        '\\b',\r\n        '\\t',\r\n        '\\n',\r\n        '\\x0b',\r\n        '\\f',\r\n        '\\r',\r\n        '\\x1b',\r\n        '\\x1c',\r\n        '\\x1d',\r\n        '\\x1e',\r\n        '\\x1f',\r\n        '@',\r\n        '\\\\',\r\n        '^',\r\n        '_',\r\n        '`',\r\n        '|',\r\n        '~',\r\n        '\\x7f'\r\n    ];\r\n    for (var i = 0; i < mixedTable.length; i++) {\r\n        CHAR_MAP[C.MODE_MIXED][StringUtils.getCharCode(mixedTable[i])] = i;\r\n    }\r\n    var punctTable = [\r\n        '\\x00',\r\n        '\\r',\r\n        '\\x00',\r\n        '\\x00',\r\n        '\\x00',\r\n        '\\x00',\r\n        '!',\r\n        '\\'',\r\n        '#',\r\n        '$',\r\n        '%',\r\n        '&',\r\n        '\\'',\r\n        '(',\r\n        ')',\r\n        '*',\r\n        '+',\r\n        ',',\r\n        '-',\r\n        '.',\r\n        '/',\r\n        ':',\r\n        ';',\r\n        '<',\r\n        '=',\r\n        '>',\r\n        '?',\r\n        '[',\r\n        ']',\r\n        '{',\r\n        '}'\r\n    ];\r\n    for (var i = 0; i < punctTable.length; i++) {\r\n        if (StringUtils.getCharCode(punctTable[i]) > 0) {\r\n            CHAR_MAP[C.MODE_PUNCT][StringUtils.getCharCode(punctTable[i])] = i;\r\n        }\r\n    }\r\n    return CHAR_MAP;\r\n}\r\nexport var CHAR_MAP = static_CHAR_MAP(Arrays.createInt32Array(5, 256));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}