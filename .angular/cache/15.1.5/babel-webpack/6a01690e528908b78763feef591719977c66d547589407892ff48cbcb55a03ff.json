{"ast":null,"code":"import IllegalArgumentException from '../../../IllegalArgumentException';\nimport ArithmeticException from '../../../ArithmeticException';\nvar ModulusBase = /** @class */function () {\n  function ModulusBase() {}\n  ModulusBase.prototype.add = function (a, b) {\n    return (a + b) % this.modulus;\n  };\n  ModulusBase.prototype.subtract = function (a, b) {\n    return (this.modulus + a - b) % this.modulus;\n  };\n  ModulusBase.prototype.exp = function (a) {\n    return this.expTable[a];\n  };\n  ModulusBase.prototype.log = function (a) {\n    if (a === 0) {\n      throw new IllegalArgumentException();\n    }\n    return this.logTable[a];\n  };\n  ModulusBase.prototype.inverse = function (a) {\n    if (a === 0) {\n      throw new ArithmeticException();\n    }\n    return this.expTable[this.modulus - this.logTable[a] - 1];\n  };\n  ModulusBase.prototype.multiply = function (a, b) {\n    if (a === 0 || b === 0) {\n      return 0;\n    }\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.modulus - 1)];\n  };\n  ModulusBase.prototype.getSize = function () {\n    return this.modulus;\n  };\n  ModulusBase.prototype.equals = function (o) {\n    return o === this;\n  };\n  return ModulusBase;\n}();\nexport default ModulusBase;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}