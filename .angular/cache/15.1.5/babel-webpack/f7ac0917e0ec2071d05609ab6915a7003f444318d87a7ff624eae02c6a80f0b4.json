{"ast":null,"code":"/**\r\n * Ponyfill for Java's Integer class.\r\n */\nvar Integer = /** @class */function () {\n  function Integer() {}\n  Integer.numberOfTrailingZeros = function (i) {\n    var y;\n    if (i === 0) return 32;\n    var n = 31;\n    y = i << 16;\n    if (y !== 0) {\n      n -= 16;\n      i = y;\n    }\n    y = i << 8;\n    if (y !== 0) {\n      n -= 8;\n      i = y;\n    }\n    y = i << 4;\n    if (y !== 0) {\n      n -= 4;\n      i = y;\n    }\n    y = i << 2;\n    if (y !== 0) {\n      n -= 2;\n      i = y;\n    }\n    return n - (i << 1 >>> 31);\n  };\n  Integer.numberOfLeadingZeros = function (i) {\n    // HD, Figure 5-6\n    if (i === 0) {\n      return 32;\n    }\n    var n = 1;\n    if (i >>> 16 === 0) {\n      n += 16;\n      i <<= 16;\n    }\n    if (i >>> 24 === 0) {\n      n += 8;\n      i <<= 8;\n    }\n    if (i >>> 28 === 0) {\n      n += 4;\n      i <<= 4;\n    }\n    if (i >>> 30 === 0) {\n      n += 2;\n      i <<= 2;\n    }\n    n -= i >>> 31;\n    return n;\n  };\n  Integer.toHexString = function (i) {\n    return i.toString(16);\n  };\n  Integer.toBinaryString = function (intNumber) {\n    return String(parseInt(String(intNumber), 2));\n  };\n  // Returns the number of one-bits in the two's complement binary representation of the specified int value. This function is sometimes referred to as the population count.\n  // Returns:\n  // the number of one-bits in the two's complement binary representation of the specified int value.\n  Integer.bitCount = function (i) {\n    // HD, Figure 5-2\n    i = i - (i >>> 1 & 0x55555555);\n    i = (i & 0x33333333) + (i >>> 2 & 0x33333333);\n    i = i + (i >>> 4) & 0x0f0f0f0f;\n    i = i + (i >>> 8);\n    i = i + (i >>> 16);\n    return i & 0x3f;\n  };\n  Integer.truncDivision = function (dividend, divisor) {\n    return Math.trunc(dividend / divisor);\n  };\n  /**\r\n   * Converts A string to an integer.\r\n   * @param s A string to convert into a number.\r\n   * @param radix A value between 2 and 36 that specifies the base of the number in numString. If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal. All other strings are considered decimal.\r\n   */\n  Integer.parseInt = function (num, radix) {\n    if (radix === void 0) {\n      radix = undefined;\n    }\n    return parseInt(num, radix);\n  };\n  Integer.MIN_VALUE_32_BITS = -2147483648;\n  Integer.MAX_VALUE = Number.MAX_SAFE_INTEGER;\n  return Integer;\n}();\nexport default Integer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}