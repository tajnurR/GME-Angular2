{"ast":null,"code":"/**\r\n * <p>Encapsulates the parameters for one error-correction block in one symbol version.\r\n * This includes the number of data codewords, and the number of times a block with these\r\n * parameters is used consecutively in the QR code version's format.</p>\r\n */\nvar ECB = /** @class */function () {\n  function ECB(count /*int*/, dataCodewords /*int*/) {\n    this.count = count;\n    this.dataCodewords = dataCodewords;\n  }\n  ECB.prototype.getCount = function () {\n    return this.count;\n  };\n  ECB.prototype.getDataCodewords = function () {\n    return this.dataCodewords;\n  };\n  return ECB;\n}();\nexport default ECB;","map":{"version":3,"names":["ECB","count","dataCodewords","prototype","getCount","getDataCodewords"],"sources":["E:/angular/GME-Angular2/node_modules/@zxing/library/esm/core/qrcode/decoder/ECB.js"],"sourcesContent":["/**\r\n * <p>Encapsulates the parameters for one error-correction block in one symbol version.\r\n * This includes the number of data codewords, and the number of times a block with these\r\n * parameters is used consecutively in the QR code version's format.</p>\r\n */\r\nvar ECB = /** @class */ (function () {\r\n    function ECB(count /*int*/, dataCodewords /*int*/) {\r\n        this.count = count;\r\n        this.dataCodewords = dataCodewords;\r\n    }\r\n    ECB.prototype.getCount = function () {\r\n        return this.count;\r\n    };\r\n    ECB.prototype.getDataCodewords = function () {\r\n        return this.dataCodewords;\r\n    };\r\n    return ECB;\r\n}());\r\nexport default ECB;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,GAAG,GAAG,aAAe,YAAY;EACjC,SAASA,GAAG,CAACC,KAAK,CAAC,SAASC,aAAa,CAAC,SAAS;IAC/C,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,aAAa,GAAGA,aAAa;EACtC;EACAF,GAAG,CAACG,SAAS,CAACC,QAAQ,GAAG,YAAY;IACjC,OAAO,IAAI,CAACH,KAAK;EACrB,CAAC;EACDD,GAAG,CAACG,SAAS,CAACE,gBAAgB,GAAG,YAAY;IACzC,OAAO,IAAI,CAACH,aAAa;EAC7B,CAAC;EACD,OAAOF,GAAG;AACd,CAAC,EAAG;AACJ,eAAeA,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}