{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport MathUtils from '../../common/detector/MathUtils';\nimport NotFoundException from '../../NotFoundException';\nimport OneDReader from '../OneDReader';\n// import Integer from '../../util/Integer';\n// import Float from '../../util/Float';\nvar AbstractRSSReader = /** @class */function (_super) {\n  __extends(AbstractRSSReader, _super);\n  function AbstractRSSReader() {\n    var _this = _super.call(this) || this;\n    _this.decodeFinderCounters = new Int32Array(4);\n    _this.dataCharacterCounters = new Int32Array(8);\n    _this.oddRoundingErrors = new Array(4);\n    _this.evenRoundingErrors = new Array(4);\n    _this.oddCounts = new Array(_this.dataCharacterCounters.length / 2);\n    _this.evenCounts = new Array(_this.dataCharacterCounters.length / 2);\n    return _this;\n  }\n  AbstractRSSReader.prototype.getDecodeFinderCounters = function () {\n    return this.decodeFinderCounters;\n  };\n  AbstractRSSReader.prototype.getDataCharacterCounters = function () {\n    return this.dataCharacterCounters;\n  };\n  AbstractRSSReader.prototype.getOddRoundingErrors = function () {\n    return this.oddRoundingErrors;\n  };\n  AbstractRSSReader.prototype.getEvenRoundingErrors = function () {\n    return this.evenRoundingErrors;\n  };\n  AbstractRSSReader.prototype.getOddCounts = function () {\n    return this.oddCounts;\n  };\n  AbstractRSSReader.prototype.getEvenCounts = function () {\n    return this.evenCounts;\n  };\n  AbstractRSSReader.prototype.parseFinderValue = function (counters, finderPatterns) {\n    for (var value = 0; value < finderPatterns.length; value++) {\n      if (OneDReader.patternMatchVariance(counters, finderPatterns[value], AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE) < AbstractRSSReader.MAX_AVG_VARIANCE) {\n        return value;\n      }\n    }\n    throw new NotFoundException();\n  };\n  /**\r\n   * @param array values to sum\r\n   * @return sum of values\r\n   * @deprecated call {@link MathUtils#sum(int[])}\r\n   */\n  AbstractRSSReader.count = function (array) {\n    return MathUtils.sum(new Int32Array(array));\n  };\n  AbstractRSSReader.increment = function (array, errors) {\n    var index = 0;\n    var biggestError = errors[0];\n    for (var i = 1; i < array.length; i++) {\n      if (errors[i] > biggestError) {\n        biggestError = errors[i];\n        index = i;\n      }\n    }\n    array[index]++;\n  };\n  AbstractRSSReader.decrement = function (array, errors) {\n    var index = 0;\n    var biggestError = errors[0];\n    for (var i = 1; i < array.length; i++) {\n      if (errors[i] < biggestError) {\n        biggestError = errors[i];\n        index = i;\n      }\n    }\n    array[index]--;\n  };\n  AbstractRSSReader.isFinderPattern = function (counters) {\n    var e_1, _a;\n    var firstTwoSum = counters[0] + counters[1];\n    var sum = firstTwoSum + counters[2] + counters[3];\n    var ratio = firstTwoSum / sum;\n    if (ratio >= AbstractRSSReader.MIN_FINDER_PATTERN_RATIO && ratio <= AbstractRSSReader.MAX_FINDER_PATTERN_RATIO) {\n      // passes ratio test in spec, but see if the counts are unreasonable\n      var minCounter = Number.MAX_SAFE_INTEGER;\n      var maxCounter = Number.MIN_SAFE_INTEGER;\n      try {\n        for (var counters_1 = __values(counters), counters_1_1 = counters_1.next(); !counters_1_1.done; counters_1_1 = counters_1.next()) {\n          var counter = counters_1_1.value;\n          if (counter > maxCounter) {\n            maxCounter = counter;\n          }\n          if (counter < minCounter) {\n            minCounter = counter;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (counters_1_1 && !counters_1_1.done && (_a = counters_1.return)) _a.call(counters_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      return maxCounter < 10 * minCounter;\n    }\n    return false;\n  };\n  AbstractRSSReader.MAX_AVG_VARIANCE = 0.2;\n  AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE = 0.45;\n  AbstractRSSReader.MIN_FINDER_PATTERN_RATIO = 9.5 / 12.0;\n  AbstractRSSReader.MAX_FINDER_PATTERN_RATIO = 12.5 / 14.0;\n  return AbstractRSSReader;\n}(OneDReader);\nexport default AbstractRSSReader;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}