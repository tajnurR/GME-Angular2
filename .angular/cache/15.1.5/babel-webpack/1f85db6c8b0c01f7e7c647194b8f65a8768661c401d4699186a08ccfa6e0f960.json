{"ast":null,"code":"/*\r\n * Direct port to TypeScript of ZXing by Adrian Toșcă\r\n */\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/*namespace com.google.zxing {*/\n/**\r\n * Enumerates barcode formats known to this package. Please keep alphabetized.\r\n *\r\n * @author Sean Owen\r\n */\nvar BarcodeFormat;\n(function (BarcodeFormat) {\n  /** Aztec 2D barcode format. */\n  BarcodeFormat[BarcodeFormat[\"AZTEC\"] = 0] = \"AZTEC\";\n  /** CODABAR 1D format. */\n  BarcodeFormat[BarcodeFormat[\"CODABAR\"] = 1] = \"CODABAR\";\n  /** Code 39 1D format. */\n  BarcodeFormat[BarcodeFormat[\"CODE_39\"] = 2] = \"CODE_39\";\n  /** Code 93 1D format. */\n  BarcodeFormat[BarcodeFormat[\"CODE_93\"] = 3] = \"CODE_93\";\n  /** Code 128 1D format. */\n  BarcodeFormat[BarcodeFormat[\"CODE_128\"] = 4] = \"CODE_128\";\n  /** Data Matrix 2D barcode format. */\n  BarcodeFormat[BarcodeFormat[\"DATA_MATRIX\"] = 5] = \"DATA_MATRIX\";\n  /** EAN-8 1D format. */\n  BarcodeFormat[BarcodeFormat[\"EAN_8\"] = 6] = \"EAN_8\";\n  /** EAN-13 1D format. */\n  BarcodeFormat[BarcodeFormat[\"EAN_13\"] = 7] = \"EAN_13\";\n  /** ITF (Interleaved Two of Five) 1D format. */\n  BarcodeFormat[BarcodeFormat[\"ITF\"] = 8] = \"ITF\";\n  /** MaxiCode 2D barcode format. */\n  BarcodeFormat[BarcodeFormat[\"MAXICODE\"] = 9] = \"MAXICODE\";\n  /** PDF417 format. */\n  BarcodeFormat[BarcodeFormat[\"PDF_417\"] = 10] = \"PDF_417\";\n  /** QR Code 2D barcode format. */\n  BarcodeFormat[BarcodeFormat[\"QR_CODE\"] = 11] = \"QR_CODE\";\n  /** RSS 14 */\n  BarcodeFormat[BarcodeFormat[\"RSS_14\"] = 12] = \"RSS_14\";\n  /** RSS EXPANDED */\n  BarcodeFormat[BarcodeFormat[\"RSS_EXPANDED\"] = 13] = \"RSS_EXPANDED\";\n  /** UPC-A 1D format. */\n  BarcodeFormat[BarcodeFormat[\"UPC_A\"] = 14] = \"UPC_A\";\n  /** UPC-E 1D format. */\n  BarcodeFormat[BarcodeFormat[\"UPC_E\"] = 15] = \"UPC_E\";\n  /** UPC/EAN extension format. Not a stand-alone format. */\n  BarcodeFormat[BarcodeFormat[\"UPC_EAN_EXTENSION\"] = 16] = \"UPC_EAN_EXTENSION\";\n})(BarcodeFormat || (BarcodeFormat = {}));\nexport default BarcodeFormat;","map":{"version":3,"names":["BarcodeFormat"],"sources":["E:/angular/GME-Angular2/node_modules/@zxing/library/esm/core/BarcodeFormat.js"],"sourcesContent":["/*\r\n * Direct port to TypeScript of ZXing by Adrian Toșcă\r\n */\r\n/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*namespace com.google.zxing {*/\r\n/**\r\n * Enumerates barcode formats known to this package. Please keep alphabetized.\r\n *\r\n * @author Sean Owen\r\n */\r\nvar BarcodeFormat;\r\n(function (BarcodeFormat) {\r\n    /** Aztec 2D barcode format. */\r\n    BarcodeFormat[BarcodeFormat[\"AZTEC\"] = 0] = \"AZTEC\";\r\n    /** CODABAR 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"CODABAR\"] = 1] = \"CODABAR\";\r\n    /** Code 39 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"CODE_39\"] = 2] = \"CODE_39\";\r\n    /** Code 93 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"CODE_93\"] = 3] = \"CODE_93\";\r\n    /** Code 128 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"CODE_128\"] = 4] = \"CODE_128\";\r\n    /** Data Matrix 2D barcode format. */\r\n    BarcodeFormat[BarcodeFormat[\"DATA_MATRIX\"] = 5] = \"DATA_MATRIX\";\r\n    /** EAN-8 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"EAN_8\"] = 6] = \"EAN_8\";\r\n    /** EAN-13 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"EAN_13\"] = 7] = \"EAN_13\";\r\n    /** ITF (Interleaved Two of Five) 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"ITF\"] = 8] = \"ITF\";\r\n    /** MaxiCode 2D barcode format. */\r\n    BarcodeFormat[BarcodeFormat[\"MAXICODE\"] = 9] = \"MAXICODE\";\r\n    /** PDF417 format. */\r\n    BarcodeFormat[BarcodeFormat[\"PDF_417\"] = 10] = \"PDF_417\";\r\n    /** QR Code 2D barcode format. */\r\n    BarcodeFormat[BarcodeFormat[\"QR_CODE\"] = 11] = \"QR_CODE\";\r\n    /** RSS 14 */\r\n    BarcodeFormat[BarcodeFormat[\"RSS_14\"] = 12] = \"RSS_14\";\r\n    /** RSS EXPANDED */\r\n    BarcodeFormat[BarcodeFormat[\"RSS_EXPANDED\"] = 13] = \"RSS_EXPANDED\";\r\n    /** UPC-A 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"UPC_A\"] = 14] = \"UPC_A\";\r\n    /** UPC-E 1D format. */\r\n    BarcodeFormat[BarcodeFormat[\"UPC_E\"] = 15] = \"UPC_E\";\r\n    /** UPC/EAN extension format. Not a stand-alone format. */\r\n    BarcodeFormat[BarcodeFormat[\"UPC_EAN_EXTENSION\"] = 16] = \"UPC_EAN_EXTENSION\";\r\n})(BarcodeFormat || (BarcodeFormat = {}));\r\nexport default BarcodeFormat;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,aAAa;AACjB,CAAC,UAAUA,aAAa,EAAE;EACtB;EACAA,aAAa,CAACA,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACnD;EACAA,aAAa,CAACA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACvD;EACAA,aAAa,CAACA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACvD;EACAA,aAAa,CAACA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACvD;EACAA,aAAa,CAACA,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EACzD;EACAA,aAAa,CAACA,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa;EAC/D;EACAA,aAAa,CAACA,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACnD;EACAA,aAAa,CAACA,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EACrD;EACAA,aAAa,CAACA,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;EAC/C;EACAA,aAAa,CAACA,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EACzD;EACAA,aAAa,CAACA,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS;EACxD;EACAA,aAAa,CAACA,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS;EACxD;EACAA,aAAa,CAACA,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ;EACtD;EACAA,aAAa,CAACA,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc;EAClE;EACAA,aAAa,CAACA,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO;EACpD;EACAA,aAAa,CAACA,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO;EACpD;EACAA,aAAa,CAACA,aAAa,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,GAAG,mBAAmB;AAChF,CAAC,EAAEA,aAAa,KAAKA,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}