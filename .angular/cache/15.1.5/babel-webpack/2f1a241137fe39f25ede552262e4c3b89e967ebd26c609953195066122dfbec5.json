{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport AI01decoder from './AI01decoder';\nimport NotFoundException from '../../../../NotFoundException';\nimport StringBuilder from '../../../../util/StringBuilder';\nvar AI01392xDecoder = /** @class */function (_super) {\n  __extends(AI01392xDecoder, _super);\n  function AI01392xDecoder(information) {\n    return _super.call(this, information) || this;\n  }\n  AI01392xDecoder.prototype.parseInformation = function () {\n    if (this.getInformation().getSize() < AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE) {\n      throw new NotFoundException();\n    }\n    var buf = new StringBuilder();\n    this.encodeCompressedGtin(buf, AI01392xDecoder.HEADER_SIZE);\n    var lastAIdigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE, AI01392xDecoder.LAST_DIGIT_SIZE);\n    buf.append('(392');\n    buf.append(lastAIdigit);\n    buf.append(')');\n    var decodedInformation = this.getGeneralDecoder().decodeGeneralPurposeField(AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE + AI01392xDecoder.LAST_DIGIT_SIZE, null);\n    buf.append(decodedInformation.getNewString());\n    return buf.toString();\n  };\n  AI01392xDecoder.HEADER_SIZE = 5 + 1 + 2;\n  AI01392xDecoder.LAST_DIGIT_SIZE = 2;\n  return AI01392xDecoder;\n}(AI01decoder);\nexport default AI01392xDecoder;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}