{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8181/pd_line/api';\nexport class PserviceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllorder() {\n    return this.http.get(baseUrl + \"/all_order\");\n  }\n  getAllDeptProggress() {\n    return this.http.get(baseUrl + \"/get_invp\");\n  }\n  deployDept(orderId) {\n    return this.http.patch(baseUrl + \"/depl_d/\" + orderId, orderId);\n  }\n}\nPserviceService.ɵfac = function PserviceService_Factory(t) {\n  return new (t || PserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nPserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PserviceService,\n  factory: PserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAGA,MAAMA,OAAO,GAAG,mCAAmC;AAUnD,OAAM,MAAOC,eAAe;EAE1BC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EACV;EAEJC,WAAW;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAUL,OAAO,GAAC,YAAY,CAAC;EACpD;EAEAM,mBAAmB;IACjB,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAQL,OAAO,GAAC,WAAW,CAAC;EAClD;EAEAO,UAAU,CAACC,OAAe;IACxB,OAAO,IAAI,CAACL,IAAI,CAACM,KAAK,CAAMT,OAAO,GAAG,UAAU,GAACQ,OAAO,EAAEA,OAAO,CAAC;EACpE;;AAhBWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAS,SAAfT,eAAe;EAAAU,YAFd;AAAM","names":["baseUrl","PserviceService","constructor","http","getAllorder","get","getAllDeptProggress","deployDept","orderId","patch","factory","providedIn"],"sourceRoot":"","sources":["E:\\GME\\Angular\\GME-Angular\\src\\app\\page\\production\\production-dashboard\\pservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, } from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nconst baseUrl = 'http://localhost:8181/pd_line/api';\r\n\r\nimport {Order} from \"./pboard.model\";\r\nimport {ApiRespons} from \"../../../model/employees/api-respons\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PserviceService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getAllorder(): Observable<Order[]>{\r\n   return this.http.get<Order[]>(baseUrl+\"/all_order\");\r\n  }\r\n\r\n  getAllDeptProggress():Observable<any[]>{\r\n    return this.http.get<any[]>(baseUrl+\"/get_invp\");\r\n  }\r\n\r\n  deployDept(orderId: number): Observable<any>{\r\n    return this.http.patch<any>(baseUrl + \"/depl_d/\"+orderId, orderId);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}