{"ast":null,"code":"/*\r\n * Copyright 2013 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// package com.google.zxing.pdf417.decoder;\n/**\r\n * @author Guenther Grau\r\n */\nvar BarcodeMetadata = /** @class */function () {\n  function BarcodeMetadata(columnCount, rowCountUpperPart, rowCountLowerPart, errorCorrectionLevel) {\n    this.columnCount = columnCount;\n    this.errorCorrectionLevel = errorCorrectionLevel;\n    this.rowCountUpperPart = rowCountUpperPart;\n    this.rowCountLowerPart = rowCountLowerPart;\n    this.rowCount = rowCountUpperPart + rowCountLowerPart;\n  }\n  BarcodeMetadata.prototype.getColumnCount = function () {\n    return this.columnCount;\n  };\n  BarcodeMetadata.prototype.getErrorCorrectionLevel = function () {\n    return this.errorCorrectionLevel;\n  };\n  BarcodeMetadata.prototype.getRowCount = function () {\n    return this.rowCount;\n  };\n  BarcodeMetadata.prototype.getRowCountUpperPart = function () {\n    return this.rowCountUpperPart;\n  };\n  BarcodeMetadata.prototype.getRowCountLowerPart = function () {\n    return this.rowCountLowerPart;\n  };\n  return BarcodeMetadata;\n}();\nexport default BarcodeMetadata;","map":{"version":3,"names":["BarcodeMetadata","columnCount","rowCountUpperPart","rowCountLowerPart","errorCorrectionLevel","rowCount","prototype","getColumnCount","getErrorCorrectionLevel","getRowCount","getRowCountUpperPart","getRowCountLowerPart"],"sources":["D:/Git/GME-Angular2/node_modules/@zxing/library/esm/core/pdf417/decoder/BarcodeMetadata.js"],"sourcesContent":["/*\r\n * Copyright 2013 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// package com.google.zxing.pdf417.decoder;\r\n/**\r\n * @author Guenther Grau\r\n */\r\nvar BarcodeMetadata = /** @class */ (function () {\r\n    function BarcodeMetadata(columnCount, rowCountUpperPart, rowCountLowerPart, errorCorrectionLevel) {\r\n        this.columnCount = columnCount;\r\n        this.errorCorrectionLevel = errorCorrectionLevel;\r\n        this.rowCountUpperPart = rowCountUpperPart;\r\n        this.rowCountLowerPart = rowCountLowerPart;\r\n        this.rowCount = rowCountUpperPart + rowCountLowerPart;\r\n    }\r\n    BarcodeMetadata.prototype.getColumnCount = function () {\r\n        return this.columnCount;\r\n    };\r\n    BarcodeMetadata.prototype.getErrorCorrectionLevel = function () {\r\n        return this.errorCorrectionLevel;\r\n    };\r\n    BarcodeMetadata.prototype.getRowCount = function () {\r\n        return this.rowCount;\r\n    };\r\n    BarcodeMetadata.prototype.getRowCountUpperPart = function () {\r\n        return this.rowCountUpperPart;\r\n    };\r\n    BarcodeMetadata.prototype.getRowCountLowerPart = function () {\r\n        return this.rowCountLowerPart;\r\n    };\r\n    return BarcodeMetadata;\r\n}());\r\nexport default BarcodeMetadata;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAe,GAAG,aAAe,YAAY;EAC7C,SAASA,eAAe,CAACC,WAAW,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,oBAAoB,EAAE;IAC9F,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACG,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACF,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACE,QAAQ,GAAGH,iBAAiB,GAAGC,iBAAiB;EACzD;EACAH,eAAe,CAACM,SAAS,CAACC,cAAc,GAAG,YAAY;IACnD,OAAO,IAAI,CAACN,WAAW;EAC3B,CAAC;EACDD,eAAe,CAACM,SAAS,CAACE,uBAAuB,GAAG,YAAY;IAC5D,OAAO,IAAI,CAACJ,oBAAoB;EACpC,CAAC;EACDJ,eAAe,CAACM,SAAS,CAACG,WAAW,GAAG,YAAY;IAChD,OAAO,IAAI,CAACJ,QAAQ;EACxB,CAAC;EACDL,eAAe,CAACM,SAAS,CAACI,oBAAoB,GAAG,YAAY;IACzD,OAAO,IAAI,CAACR,iBAAiB;EACjC,CAAC;EACDF,eAAe,CAACM,SAAS,CAACK,oBAAoB,GAAG,YAAY;IACzD,OAAO,IAAI,CAACR,iBAAiB;EACjC,CAAC;EACD,OAAOH,eAAe;AAC1B,CAAC,EAAG;AACJ,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}