{"ast":null,"code":"/*\r\n * Copyright 2010 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport DetectorResult from '../common/DetectorResult';\n/**\r\n * <p>Extends {@link DetectorResult} with more information specific to the Aztec format,\r\n * like the number of layers and whether it's compact.</p>\r\n *\r\n * @author Sean Owen\r\n */\nvar AztecDetectorResult = /** @class */function (_super) {\n  __extends(AztecDetectorResult, _super);\n  function AztecDetectorResult(bits, points, compact, nbDatablocks, nbLayers) {\n    var _this = _super.call(this, bits, points) || this;\n    _this.compact = compact;\n    _this.nbDatablocks = nbDatablocks;\n    _this.nbLayers = nbLayers;\n    return _this;\n  }\n  AztecDetectorResult.prototype.getNbLayers = function () {\n    return this.nbLayers;\n  };\n  AztecDetectorResult.prototype.getNbDatablocks = function () {\n    return this.nbDatablocks;\n  };\n  AztecDetectorResult.prototype.isCompact = function () {\n    return this.compact;\n  };\n  return AztecDetectorResult;\n}(DetectorResult);\nexport default AztecDetectorResult;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}