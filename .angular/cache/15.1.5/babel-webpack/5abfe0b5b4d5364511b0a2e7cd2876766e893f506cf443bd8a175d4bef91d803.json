{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../client-reg-form/client-reg-form.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nfunction ClientListComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"p\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 11)(7, \"span\", 12);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.convertImg(c_r1.imageData), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.client_name, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.client_country, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.client_email, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.client_phone, \"\");\n  }\n}\nexport class ClientListComponent {\n  constructor(service, sanitizer) {\n    this.service = service;\n    this.sanitizer = sanitizer;\n    this.allClient = [];\n    this.images = [];\n    this.clientImgs = [];\n  }\n  ngOnInit() {\n    this.getAllClient();\n  }\n  getAllClient() {\n    this.service.getAllClient().subscribe(cliet => {\n      this.allClient = cliet;\n      this.service.findAllImg().subscribe(data => {\n        this.images = data;\n        console.log(this.allClient);\n        console.log(this.images);\n        this.clientImgs = this.allClient.map((item, i) => Object.assign({}, item, this.images.find(imgn => imgn.name == item.client_image)));\n      });\n    });\n  }\n  getimg(imgN) {\n    this.service.getImageByName(imgN).subscribe(data => {\n      this.imgs = data;\n      return this.imgSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${this.imgs.imageData}`);\n    });\n  }\n  convertImg(imgbase64) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${imgbase64}`);\n  }\n}\nClientListComponent.ɵfac = function ClientListComponent_Factory(t) {\n  return new (t || ClientListComponent)(i0.ɵɵdirectiveInject(i1.ClientRegFormService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\nClientListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientListComponent,\n  selectors: [[\"app-client-list\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[\"id\", \"main\", 1, \"main\"], [1, \"col-12\"], [1, \"card\", \"recent-sales\", \"overflow-auto\"], [1, \"card-body\"], [1, \"card-title\"], [\"class\", \"row client_list_wrapper animate__animated animate__shakeX \", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"client_list_wrapper\", \"animate__animated\", \"animate__shakeX\"], [1, \"col-md-2\"], [1, \"client_list_img\", 3, \"src\"], [1, \"col-md-9\", \"row\", \"client_list_status\"], [1, \"client_list_name\"], [1, \"mt-2\"], [1, \"client_country\"]],\n  template: function ClientListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n      i0.ɵɵtext(5, \" Client Status \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵtemplate(7, ClientListComponent_div_7_Template, 13, 5, \"div\", 5);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.clientImgs);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\".client_list_wrapper[_ngcontent-%COMP%]{\\r\\n    border: solid 1px rgba(72, 90, 244, .1);\\r\\n    border-radius: 5px;\\r\\n    padding: 10px;\\r\\n    margin: 10px;\\r\\n    box-shadow: 3px 3px 5px #eee;\\r\\n    transition: 0.5s;\\r\\n}\\r\\n\\r\\n.client_list_wrapper[_ngcontent-%COMP%]:hover {\\r\\n    scale: 1.05;\\r\\n    background-color :rgba(72, 90, 244, .2);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.client_list_img[_ngcontent-%COMP%]{\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    border: solid 0px #8c5cfc44; \\r\\n    border-radius: 5px;\\r\\n    box-shadow: 3px 3px 5px #eee;\\r\\n\\r\\n}\\r\\n\\r\\n.client_list_status[_ngcontent-%COMP%]{\\r\\n    line-height: 7px;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.client_list_name[_ngcontent-%COMP%]{\\r\\n    font-size: 18pt;\\r\\n    font-weight: 700;\\r\\n}\\r\\n.client_country[_ngcontent-%COMP%]{\\r\\n    background-color: #7f4afaaa;\\r\\n    line-height: 10px;\\r\\n    padding: 4px;\\r\\n    border-radius: 5px;\\r\\n    color:aliceblue;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZS9jbGllbnQvY2xpZW50LWxpc3QvY2xpZW50LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSx1Q0FBdUM7SUFDdkMsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixZQUFZO0lBQ1osNEJBQTRCO0lBQzVCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCx1Q0FBdUM7SUFDdkMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLGtCQUFrQjtJQUNsQiw0QkFBNEI7O0FBRWhDOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSwyQkFBMkI7SUFDM0IsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uY2xpZW50X2xpc3Rfd3JhcHBlcntcclxuICAgIGJvcmRlcjogc29saWQgMXB4IHJnYmEoNzIsIDkwLCAyNDQsIC4xKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAzcHggM3B4IDVweCAjZWVlO1xyXG4gICAgdHJhbnNpdGlvbjogMC41cztcclxufVxyXG5cclxuLmNsaWVudF9saXN0X3dyYXBwZXI6aG92ZXIge1xyXG4gICAgc2NhbGU6IDEuMDU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yIDpyZ2JhKDcyLCA5MCwgMjQ0LCAuMik7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5jbGllbnRfbGlzdF9pbWd7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgYm9yZGVyOiBzb2xpZCAwcHggIzhjNWNmYzQ0OyBcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJveC1zaGFkb3c6IDNweCAzcHggNXB4ICNlZWU7XHJcblxyXG59XHJcblxyXG4uY2xpZW50X2xpc3Rfc3RhdHVze1xyXG4gICAgbGluZS1oZWlnaHQ6IDdweDtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLmNsaWVudF9saXN0X25hbWV7XHJcbiAgICBmb250LXNpemU6IDE4cHQ7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcbi5jbGllbnRfY291bnRyeXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3ZjRhZmFhYTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMHB4O1xyXG4gICAgcGFkZGluZzogNHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY29sb3I6YWxpY2VibHVlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAYkBA,8BAAsG;IAElGA,yBAA+D;IACjEA,iBAAM;IAENA,8BAA8C;IACfA,YAAiB;IAAAA,iBAAI;IAClDA,6BAAgB;IAAgCA,YAAqB;IAAAA,iBAAO;IAC5EA,yBAAG;IAACA,aAAkB;IAAAA,iBAAI;IAC1BA,0BAAG;IAACA,aAAkB;IAAAA,iBAAI;;;;;IAPrBA,eAA+B;IAA/BA,yEAA+B;IAIPA,eAAiB;IAAjBA,gDAAiB;IACEA,eAAqB;IAArBA,oDAAqB;IACjEA,eAAkB;IAAlBA,iDAAkB;IAClBA,eAAkB;IAAlBA,iDAAkB;;;ACX5C,OAAM,MAAOC,mBAAmB;EAE9BC,YACUC,OAA6B,EAC7BC,SAAuB;IADvB,YAAO,GAAPD,OAAO;IACP,cAAS,GAATC,SAAS;IAKnB,cAAS,GAAkB,EAAE;IAC7B,WAAM,GAAS,EAAE;IACjB,eAAU,GAAO,EAAE;EANf;EASJC,QAAQ;IACJ,IAAI,CAACC,YAAY,EAAE;EACvB;EAEAA,YAAY;IACV,IAAI,CAACH,OAAO,CAACG,YAAY,EAAE,CAACC,SAAS,CACnCC,KAAK,IAAG;MAAE,IAAI,CAACC,SAAS,GAAGD,KAAK;MAE9B,IAAI,CAACL,OAAO,CAACO,UAAU,EAAE,CAACH,SAAS,CACjCI,IAAI,IAAG;QACL,IAAI,CAACC,MAAM,GAAGD,IAAI;QAClBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,SAAS,CAAC;QAC3BI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC;QACxB,IAAI,CAACG,UAAU,GAAG,IAAI,CAACN,SAAS,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAIC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,IAAI,EACrE,IAAI,CAACL,MAAM,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,IAAIN,IAAI,CAACO,YAAY,CAAC,CAAC,CAAC;MAE9D,CAAC,CACF;IAEH,CAAC,CAEF;EACH;EAEAC,MAAM,CAACC,IAAY;IACjB,IAAI,CAACvB,OAAO,CAACwB,cAAc,CAACD,IAAI,CAAC,CAACnB,SAAS,CACzCI,IAAI,IAAG;MACL,IAAI,CAACiB,IAAI,GAAGjB,IAAI;MAChB,OAAO,IAAI,CAACkB,SAAS,GAAG,IAAI,CAACzB,SAAS,CAAC0B,8BAA8B,CAAC,0BAA0B,IAAI,CAACF,IAAI,CAACG,SAAS,EAAE,CAAC;IACxH,CAAC,CACF;EACH;EAEAC,UAAU,CAACC,SAAc;IACvB,OAAO,IAAI,CAAC7B,SAAS,CAAC0B,8BAA8B,CAAC,0BAA0BG,SAAS,EAAE,CAAC;EAC7F;;AAjDWhC,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRhCtC,+BAA6B;MAQWA,+BAAc;MAAAA,iBAAK;MAC7CA,2BAAM;MACFA,qEAYM;MACVA,iBAAM;;;MAboFA,eAAa;MAAbA,wCAAa","names":["i0","ClientListComponent","constructor","service","sanitizer","ngOnInit","getAllClient","subscribe","cliet","allClient","findAllImg","data","images","console","log","clientImgs","map","item","i","Object","assign","find","imgn","name","client_image","getimg","imgN","getImageByName","imgs","imgSource","bypassSecurityTrustResourceUrl","imageData","convertImg","imgbase64","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\angular\\GME-Angular2\\src\\app\\page\\client\\client-list\\client-list.component.html","E:\\angular\\GME-Angular2\\src\\app\\page\\client\\client-list\\client-list.component.ts"],"sourcesContent":["\r\n\r\n<main id=\"main\" class=\"main\">\r\n\r\n    <!-- Client List -->\r\n    <div class=\"col-12\">\r\n        <div class=\"card recent-sales overflow-auto\">\r\n\r\n\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\"> Client Status </h5>\r\n              <div >\r\n                  <div class=\"row client_list_wrapper animate__animated animate__shakeX \" *ngFor=\"let c of clientImgs\" >\r\n                    <div class=\"col-md-2\">\r\n                      <img [src]=\"convertImg(c.imageData)\" class=\"client_list_img \" >\r\n                    </div>\r\n\r\n                    <div class=\"col-md-9 row client_list_status\" >\r\n                      <p class=\"client_list_name\"> {{c.client_name}}</p>\r\n                      <p class=\"mt-2\"> <span class=\"client_country\" > {{c.client_country}} </span></p>\r\n                      <p> {{c.client_email}}</p>\r\n                      <p> {{c.client_phone}}</p>\r\n\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div><!-- End Recent Sales -->\r\n</main><!-- End #main -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {ClientRegFormService} from \"../client-reg-form/client-reg-form.service\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\nimport {ClientRegForm} from \"../client-reg-form/client-reg-form.model\";\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n\r\n  constructor(\r\n    private service: ClientRegFormService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  imgs:any;\r\n  imgSource:any;\r\n  allClient: ClientRegForm[]=[];\r\n  images:any[] = [];\r\n  clientImgs:any[]=[]\r\n\r\n\r\n  ngOnInit(): void {\r\n      this.getAllClient();\r\n  }\r\n\r\n  getAllClient(){\r\n    this.service.getAllClient().subscribe(\r\n      cliet => {this.allClient = cliet\r\n\r\n        this.service.findAllImg().subscribe(\r\n          data => {\r\n            this.images = data\r\n            console.log(this.allClient)\r\n            console.log(this.images)\r\n            this.clientImgs = this.allClient.map((item, i)=> Object.assign({}, item,\r\n              this.images.find(imgn => imgn.name == item.client_image)));\r\n\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n    )\r\n  }\r\n\r\n  getimg(imgN: string){\r\n    this.service.getImageByName(imgN).subscribe(\r\n      data => {\r\n        this.imgs = data;\r\n        return this.imgSource = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${this.imgs.imageData}`)\r\n      }\r\n    )\r\n  }\r\n\r\n  convertImg(imgbase64: any){\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${imgbase64}`)\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}