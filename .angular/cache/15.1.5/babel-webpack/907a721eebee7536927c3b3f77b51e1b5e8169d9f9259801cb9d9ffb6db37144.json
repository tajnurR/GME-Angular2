{"ast":null,"code":"/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * <p>Encapsulates the result of detecting a barcode in an image. This includes the raw\r\n * matrix of black/white pixels corresponding to the barcode, and possibly points of interest\r\n * in the image, like the location of finder patterns or corners of the barcode in the image.</p>\r\n *\r\n * @author Sean Owen\r\n */\nvar DetectorResult = /** @class */function () {\n  function DetectorResult(bits, points) {\n    this.bits = bits;\n    this.points = points;\n  }\n  DetectorResult.prototype.getBits = function () {\n    return this.bits;\n  };\n  DetectorResult.prototype.getPoints = function () {\n    return this.points;\n  };\n  return DetectorResult;\n}();\nexport default DetectorResult;","map":{"version":3,"names":["DetectorResult","bits","points","prototype","getBits","getPoints"],"sources":["D:/Git/GME-Angular2/node_modules/@zxing/library/esm/core/common/DetectorResult.js"],"sourcesContent":["/*\r\n * Copyright 2007 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * <p>Encapsulates the result of detecting a barcode in an image. This includes the raw\r\n * matrix of black/white pixels corresponding to the barcode, and possibly points of interest\r\n * in the image, like the location of finder patterns or corners of the barcode in the image.</p>\r\n *\r\n * @author Sean Owen\r\n */\r\nvar DetectorResult = /** @class */ (function () {\r\n    function DetectorResult(bits, points) {\r\n        this.bits = bits;\r\n        this.points = points;\r\n    }\r\n    DetectorResult.prototype.getBits = function () {\r\n        return this.bits;\r\n    };\r\n    DetectorResult.prototype.getPoints = function () {\r\n        return this.points;\r\n    };\r\n    return DetectorResult;\r\n}());\r\nexport default DetectorResult;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,cAAc,GAAG,aAAe,YAAY;EAC5C,SAASA,cAAc,CAACC,IAAI,EAAEC,MAAM,EAAE;IAClC,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACAF,cAAc,CAACG,SAAS,CAACC,OAAO,GAAG,YAAY;IAC3C,OAAO,IAAI,CAACH,IAAI;EACpB,CAAC;EACDD,cAAc,CAACG,SAAS,CAACE,SAAS,GAAG,YAAY;IAC7C,OAAO,IAAI,CAACH,MAAM;EACtB,CAAC;EACD,OAAOF,cAAc;AACzB,CAAC,EAAG;AACJ,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}