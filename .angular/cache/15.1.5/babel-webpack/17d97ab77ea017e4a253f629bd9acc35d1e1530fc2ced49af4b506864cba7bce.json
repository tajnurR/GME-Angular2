{"ast":null,"code":"import IllegalStateException from '../../../../IllegalStateException';\nimport GeneralAppIdDecoder from './GeneralAppIdDecoder';\nimport AI01AndOtherAIs from './AI01AndOtherAIs';\nimport AnyAIDecoder from './AnyAIDecoder';\nimport AI013103decoder from './AI013103decoder';\nimport AI01320xDecoder from './AI01320xDecoder';\nimport AI01392xDecoder from './AI01392xDecoder';\nimport AI01393xDecoder from './AI01393xDecoder';\nimport AI013x0x1xDecoder from './AI013x0x1xDecoder';\nexport function createDecoder(information) {\n  try {\n    if (information.get(1)) {\n      return new AI01AndOtherAIs(information);\n    }\n    if (!information.get(2)) {\n      return new AnyAIDecoder(information);\n    }\n    var fourBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 4);\n    switch (fourBitEncodationMethod) {\n      case 4:\n        return new AI013103decoder(information);\n      case 5:\n        return new AI01320xDecoder(information);\n    }\n    var fiveBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 5);\n    switch (fiveBitEncodationMethod) {\n      case 12:\n        return new AI01392xDecoder(information);\n      case 13:\n        return new AI01393xDecoder(information);\n    }\n    var sevenBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 7);\n    switch (sevenBitEncodationMethod) {\n      case 56:\n        return new AI013x0x1xDecoder(information, '310', '11');\n      case 57:\n        return new AI013x0x1xDecoder(information, '320', '11');\n      case 58:\n        return new AI013x0x1xDecoder(information, '310', '13');\n      case 59:\n        return new AI013x0x1xDecoder(information, '320', '13');\n      case 60:\n        return new AI013x0x1xDecoder(information, '310', '15');\n      case 61:\n        return new AI013x0x1xDecoder(information, '320', '15');\n      case 62:\n        return new AI013x0x1xDecoder(information, '310', '17');\n      case 63:\n        return new AI013x0x1xDecoder(information, '320', '17');\n    }\n  } catch (e) {\n    console.log(e);\n    throw new IllegalStateException('unknown decoder: ' + information);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}