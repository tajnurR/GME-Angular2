{"ast":null,"code":"/*\r\n * Copyright 2013 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Meta-data container for QR Code decoding. Instances of this class may be used to convey information back to the\r\n * decoding caller. Callers are expected to process this.\r\n *\r\n * @see com.google.zxing.common.DecoderResult#getOther()\r\n */\nvar QRCodeDecoderMetaData = /** @class */function () {\n  function QRCodeDecoderMetaData(mirrored) {\n    this.mirrored = mirrored;\n  }\n  /**\r\n   * @return true if the QR Code was mirrored.\r\n   */\n  QRCodeDecoderMetaData.prototype.isMirrored = function () {\n    return this.mirrored;\n  };\n  /**\r\n   * Apply the result points' order correction due to mirroring.\r\n   *\r\n   * @param points Array of points to apply mirror correction to.\r\n   */\n  QRCodeDecoderMetaData.prototype.applyMirroredCorrection = function (points) {\n    if (!this.mirrored || points === null || points.length < 3) {\n      return;\n    }\n    var bottomLeft = points[0];\n    points[0] = points[2];\n    points[2] = bottomLeft;\n    // No need to 'fix' top-left and alignment pattern.\n  };\n\n  return QRCodeDecoderMetaData;\n}();\nexport default QRCodeDecoderMetaData;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}