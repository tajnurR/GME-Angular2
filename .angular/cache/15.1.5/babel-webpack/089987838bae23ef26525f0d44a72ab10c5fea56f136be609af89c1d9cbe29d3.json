{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { BrowserCodeReader } from './BrowserCodeReader';\nimport MultiFormatReader from '../core/MultiFormatReader';\nvar BrowserMultiFormatReader = /** @class */function (_super) {\n  __extends(BrowserMultiFormatReader, _super);\n  function BrowserMultiFormatReader(hints, timeBetweenScansMillis) {\n    if (hints === void 0) {\n      hints = null;\n    }\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n    var _this = this;\n    var reader = new MultiFormatReader();\n    reader.setHints(hints);\n    _this = _super.call(this, reader, timeBetweenScansMillis) || this;\n    return _this;\n  }\n  /**\r\n   * Overwrite decodeBitmap to call decodeWithState, which will pay\r\n   * attention to the hints set in the constructor function\r\n   */\n  BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decodeWithState(binaryBitmap);\n  };\n  return BrowserMultiFormatReader;\n}(BrowserCodeReader);\nexport { BrowserMultiFormatReader };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}