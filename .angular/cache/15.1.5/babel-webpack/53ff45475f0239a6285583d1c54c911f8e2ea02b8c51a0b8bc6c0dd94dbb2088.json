{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport AI01weightDecoder from './AI01weightDecoder';\nimport NotFoundException from '../../../../NotFoundException';\nimport StringBuilder from '../../../../util/StringBuilder';\nvar AI013x0x1xDecoder = /** @class */function (_super) {\n  __extends(AI013x0x1xDecoder, _super);\n  function AI013x0x1xDecoder(information, firstAIdigits, dateCode) {\n    var _this = _super.call(this, information) || this;\n    _this.dateCode = dateCode;\n    _this.firstAIdigits = firstAIdigits;\n    return _this;\n  }\n  AI013x0x1xDecoder.prototype.parseInformation = function () {\n    if (this.getInformation().getSize() != AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE + AI013x0x1xDecoder.WEIGHT_SIZE + AI013x0x1xDecoder.DATE_SIZE) {\n      throw new NotFoundException();\n    }\n    var buf = new StringBuilder();\n    this.encodeCompressedGtin(buf, AI013x0x1xDecoder.HEADER_SIZE);\n    this.encodeCompressedWeight(buf, AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE, AI013x0x1xDecoder.WEIGHT_SIZE);\n    this.encodeCompressedDate(buf, AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE + AI013x0x1xDecoder.WEIGHT_SIZE);\n    return buf.toString();\n  };\n  AI013x0x1xDecoder.prototype.encodeCompressedDate = function (buf, currentPos) {\n    var numericDate = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos, AI013x0x1xDecoder.DATE_SIZE);\n    if (numericDate == 38400) {\n      return;\n    }\n    buf.append('(');\n    buf.append(this.dateCode);\n    buf.append(')');\n    var day = numericDate % 32;\n    numericDate /= 32;\n    var month = numericDate % 12 + 1;\n    numericDate /= 12;\n    var year = numericDate;\n    if (year / 10 == 0) {\n      buf.append('0');\n    }\n    buf.append(year);\n    if (month / 10 == 0) {\n      buf.append('0');\n    }\n    buf.append(month);\n    if (day / 10 == 0) {\n      buf.append('0');\n    }\n    buf.append(day);\n  };\n  AI013x0x1xDecoder.prototype.addWeightCode = function (buf, weight) {\n    buf.append('(');\n    buf.append(this.firstAIdigits);\n    buf.append(weight / 100000);\n    buf.append(')');\n  };\n  AI013x0x1xDecoder.prototype.checkWeight = function (weight) {\n    return weight % 100000;\n  };\n  AI013x0x1xDecoder.HEADER_SIZE = 7 + 1;\n  AI013x0x1xDecoder.WEIGHT_SIZE = 20;\n  AI013x0x1xDecoder.DATE_SIZE = 16;\n  return AI013x0x1xDecoder;\n}(AI01weightDecoder);\nexport default AI013x0x1xDecoder;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}