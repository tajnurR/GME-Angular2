{"ast":null,"code":"var ExpandedPair = /** @class */function () {\n  function ExpandedPair(leftChar, rightChar, finderPatter, mayBeLast) {\n    this.leftchar = leftChar;\n    this.rightchar = rightChar;\n    this.finderpattern = finderPatter;\n    this.maybeLast = mayBeLast;\n  }\n  ExpandedPair.prototype.mayBeLast = function () {\n    return this.maybeLast;\n  };\n  ExpandedPair.prototype.getLeftChar = function () {\n    return this.leftchar;\n  };\n  ExpandedPair.prototype.getRightChar = function () {\n    return this.rightchar;\n  };\n  ExpandedPair.prototype.getFinderPattern = function () {\n    return this.finderpattern;\n  };\n  ExpandedPair.prototype.mustBeLast = function () {\n    return this.rightchar == null;\n  };\n  ExpandedPair.prototype.toString = function () {\n    return '[ ' + this.leftchar + ', ' + this.rightchar + ' : ' + (this.finderpattern == null ? 'null' : this.finderpattern.getValue()) + ' ]';\n  };\n  ExpandedPair.equals = function (o1, o2) {\n    if (!(o1 instanceof ExpandedPair)) {\n      return false;\n    }\n    return ExpandedPair.equalsOrNull(o1.leftchar, o2.leftchar) && ExpandedPair.equalsOrNull(o1.rightchar, o2.rightchar) && ExpandedPair.equalsOrNull(o1.finderpattern, o2.finderpattern);\n  };\n  ExpandedPair.equalsOrNull = function (o1, o2) {\n    return o1 === null ? o2 === null : ExpandedPair.equals(o1, o2);\n  };\n  ExpandedPair.prototype.hashCode = function () {\n    // return ExpandedPair.hashNotNull(leftChar) ^ hashNotNull(rightChar) ^ hashNotNull(finderPattern);\n    var value = this.leftchar.getValue() ^ this.rightchar.getValue() ^ this.finderpattern.getValue();\n    return value;\n  };\n  return ExpandedPair;\n}();\nexport default ExpandedPair;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}