{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./client-reg-form.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"clientForm\"];\nfunction ClientRegFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"p\");\n    i0.ɵɵtext(2, \"New Customar add succsfully\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ClientRegFormComponent_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const coun_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", coun_r3.cntName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(coun_r3.cntName);\n  }\n}\nexport class ClientRegFormComponent {\n  constructor(clientservice, countryService, router) {\n    this.clientservice = clientservice;\n    this.countryService = countryService;\n    this.router = router;\n    this.client = [];\n    this.country = [];\n    this.submited = false;\n  }\n  ngOnInit() {\n    this.clientList();\n    this.countryList();\n  }\n  clientList() {\n    this.clientservice.getAllClient().subscribe(client => {\n      this.client = client;\n      console.log(this.client);\n    });\n  }\n  countryList() {\n    this.countryService.getAllCountry().subscribe(country => {\n      this.country = country;\n      console.log(this.country);\n    });\n  }\n  profileImg(event) {\n    console.log(event);\n    this.profilImg = event.target.files[0];\n  }\n  addNewClient() {\n    this.clients = this.clientForm.value;\n    console.log(this.profilImg);\n    this.clientservice.uploadImg(this.profilImg).subscribe(data => {\n      console.log(\"Done\");\n      this.clientservice.createClient(this.clients).subscribe(data => {\n        this.clientForm.reset();\n        this.submited = true;\n        this.gotoClientgList();\n      });\n    });\n  }\n  gotoClientgList() {\n    this.router.navigate(['client_list']);\n  }\n}\nClientRegFormComponent.ɵfac = function ClientRegFormComponent_Factory(t) {\n  return new (t || ClientRegFormComponent)(i0.ɵɵdirectiveInject(i1.ClientRegFormService), i0.ɵɵdirectiveInject(i1.ClientRegFormService), i0.ɵɵdirectiveInject(i2.Router));\n};\nClientRegFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientRegFormComponent,\n  selectors: [[\"app-client-reg-form\"]],\n  viewQuery: function ClientRegFormComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clientForm = _t.first);\n    }\n  },\n  decls: 58,\n  vars: 2,\n  consts: [[\"id\", \"main\", 1, \"main\"], [1, \"col-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"section\"], [1, \"row\"], [1, \"col-lg-10\", \"offset-1\", \"mt-4\"], [1, \"card-title\"], [\"style\", \"background-color: rgba(0,255,0,0.4)\", 4, \"ngIf\"], [\"enctype\", \"multipart/form-data\", 1, \"row\", \"g-3\", 3, \"ngSubmit\"], [\"clientForm\", \"ngForm\"], [1, \"col-md-12\"], [\"type\", \"text\", \"placeholder\", \"Your Name\", \"name\", \"client_name\", \"ngModel\", \"\", 1, \"form-control\"], [1, \"col-md-6\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"name\", \"client_email\", 1, \"form-control\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"client_password\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Address\", \"name\", \"client_address\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Phone\", \"name\", \"client_phone\", \"ngModel\", \"\", 1, \"form-control\"], [\"id\", \"inputState\", \"name\", \"client_country\", \"ngModel\", \"\", 1, \"form-select\"], [\"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\", \"form_field_border\"], [\"for\", \"gridRadios1\", 1, \"mt-2\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"gridRadios\", \"id\", \"gridRadios1\", \"value\", \"male\", \"name\", \"client_gender\", \"ngModel\", \"\", \"checked\", \"\", 1, \"form-check-input\"], [\"for\", \"gridRadios1\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"gridRadios\", \"id\", \"gridRadios2\", \"value\", \"female\", \"name\", \"client_gender\", \"ngModel\", \"\", 1, \"form-check-input\"], [\"for\", \"gridRadios2\", 1, \"form-check-label\"], [\"for\", \"inputDate\", 1, \"mt-2\"], [1, \"\"], [\"type\", \"date\", \"id\", \"inputDate\", \"name\", \"client_dob\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"formFile\", 1, \"mt-2\"], [1, \"col-sm-10\"], [\"type\", \"file\", \"name\", \"files\", \"id\", \"formFile\", 1, \"form-control\", 3, \"change\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\"], [2, \"background-color\", \"rgba(0,255,0,0.4)\"], [3, \"value\"]],\n  template: function ClientRegFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"section\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 2)(8, \"div\", 3)(9, \"h5\", 7);\n      i0.ɵɵtext(10, \"Customar Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ClientRegFormComponent_div_11_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementStart(12, \"form\", 9, 10);\n      i0.ɵɵlistener(\"ngSubmit\", function ClientRegFormComponent_Template_form_ngSubmit_12_listener() {\n        return ctx.addNewClient();\n      });\n      i0.ɵɵelementStart(14, \"div\", 11);\n      i0.ɵɵelement(15, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 13);\n      i0.ɵɵelement(17, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13);\n      i0.ɵɵelement(19, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 1);\n      i0.ɵɵelement(21, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 13);\n      i0.ɵɵelement(23, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"select\", 18)(26, \"option\", 19);\n      i0.ɵɵtext(27, \"Choose country...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, ClientRegFormComponent_option_28_Template, 2, 2, \"option\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 21)(30, \"label\", 22);\n      i0.ɵɵtext(31, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"hr\");\n      i0.ɵɵelementStart(33, \"div\", 23);\n      i0.ɵɵelement(34, \"input\", 24);\n      i0.ɵɵelementStart(35, \"label\", 25);\n      i0.ɵɵtext(36, \" Male \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 23);\n      i0.ɵɵelement(38, \"input\", 26);\n      i0.ɵɵelementStart(39, \"label\", 27);\n      i0.ɵɵtext(40, \" Female \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 21)(42, \"label\", 28);\n      i0.ɵɵtext(43, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"hr\");\n      i0.ɵɵelementStart(45, \"div\", 29);\n      i0.ɵɵelement(46, \"input\", 30);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"div\", 21)(48, \"label\", 31);\n      i0.ɵɵtext(49, \"Upload Profile Photo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"hr\");\n      i0.ɵɵelementStart(51, \"div\", 32)(52, \"input\", 33);\n      i0.ɵɵlistener(\"change\", function ClientRegFormComponent_Template_input_change_52_listener($event) {\n        return ctx.profileImg($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"div\", 34)(54, \"button\", 35);\n      i0.ɵɵtext(55, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"button\", 36);\n      i0.ɵɵtext(57, \"Reset\");\n      i0.ɵɵelementEnd()()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.submited);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.country);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".form_field_border[_ngcontent-%COMP%]{border:1px solid #55555522;border-radius:5px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}