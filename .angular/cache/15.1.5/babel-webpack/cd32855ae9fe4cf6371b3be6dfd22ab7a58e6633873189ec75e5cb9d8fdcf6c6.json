{"ast":null,"code":"/*\r\n * Copyright 2009 ZXing authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * This class hierarchy provides a set of methods to convert luminance data to 1 bit data.\r\n * It allows the algorithm to vary polymorphically, for example allowing a very expensive\r\n * thresholding technique for servers and a fast one for mobile. It also permits the implementation\r\n * to vary, e.g. a JNI version for Android and a Java fallback version for other platforms.\r\n *\r\n * @author dswitkin@google.com (Daniel Switkin)\r\n */\nvar Binarizer = /** @class */function () {\n  function Binarizer(source) {\n    this.source = source;\n  }\n  Binarizer.prototype.getLuminanceSource = function () {\n    return this.source;\n  };\n  Binarizer.prototype.getWidth = function () {\n    return this.source.getWidth();\n  };\n  Binarizer.prototype.getHeight = function () {\n    return this.source.getHeight();\n  };\n  return Binarizer;\n}();\nexport default Binarizer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}