{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./client-reg-form.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"clientForm\"];\nfunction ClientRegFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"p\");\n    i0.ɵɵtext(2, \"New Customar add succsfully\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ClientRegFormComponent_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const coun_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", coun_r3.cntName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(coun_r3.cntName);\n  }\n}\nexport class ClientRegFormComponent {\n  constructor(clientservice, countryService, router) {\n    this.clientservice = clientservice;\n    this.countryService = countryService;\n    this.router = router;\n    this.client = [];\n    this.country = [];\n    this.submited = false;\n  }\n  ngOnInit() {\n    this.clientList();\n    this.countryList();\n  }\n  clientList() {\n    this.clientservice.getAllClient().subscribe(client => {\n      this.client = client;\n      console.log(this.client);\n    });\n  }\n  countryList() {\n    this.countryService.getAllCountry().subscribe(country => {\n      this.country = country;\n      console.log(this.country);\n    });\n  }\n  profileImg(event) {\n    console.log(event);\n    this.profilImg = event.target.files[0];\n  }\n  addNewClient() {\n    this.clients = this.clientForm.value;\n    console.log(this.profilImg);\n    this.clientservice.uploadImg(this.profilImg).subscribe(data => {\n      console.log(\"Done\");\n      this.clientservice.createClient(this.clients).subscribe(data => {\n        this.clientForm.reset();\n        this.submited = true;\n        this.gotoClientgList();\n      });\n    });\n  }\n  gotoClientgList() {\n    this.router.navigate(['client_list']);\n  }\n}\nClientRegFormComponent.ɵfac = function ClientRegFormComponent_Factory(t) {\n  return new (t || ClientRegFormComponent)(i0.ɵɵdirectiveInject(i1.ClientRegFormService), i0.ɵɵdirectiveInject(i1.ClientRegFormService), i0.ɵɵdirectiveInject(i2.Router));\n};\nClientRegFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientRegFormComponent,\n  selectors: [[\"app-client-reg-form\"]],\n  viewQuery: function ClientRegFormComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clientForm = _t.first);\n    }\n  },\n  decls: 58,\n  vars: 2,\n  consts: [[\"id\", \"main\", 1, \"main\"], [1, \"col-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"section\"], [1, \"row\"], [1, \"col-lg-10\", \"offset-1\", \"mt-4\"], [1, \"card-title\"], [\"style\", \"background-color: rgba(0,255,0,0.4)\", 4, \"ngIf\"], [\"enctype\", \"multipart/form-data\", 1, \"row\", \"g-3\", 3, \"ngSubmit\"], [\"clientForm\", \"ngForm\"], [1, \"col-md-12\"], [\"type\", \"text\", \"placeholder\", \"Your Name\", \"name\", \"client_name\", \"ngModel\", \"\", 1, \"form-control\"], [1, \"col-md-6\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"name\", \"client_email\", 1, \"form-control\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"client_password\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Address\", \"name\", \"client_address\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Phone\", \"name\", \"client_phone\", \"ngModel\", \"\", 1, \"form-control\"], [\"id\", \"inputState\", \"name\", \"client_country\", \"ngModel\", \"\", 1, \"form-select\"], [\"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\", \"form_field_border\"], [\"for\", \"gridRadios1\", 1, \"mt-2\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"gridRadios\", \"id\", \"gridRadios1\", \"value\", \"male\", \"name\", \"client_gender\", \"ngModel\", \"\", \"checked\", \"\", 1, \"form-check-input\"], [\"for\", \"gridRadios1\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"gridRadios\", \"id\", \"gridRadios2\", \"value\", \"female\", \"name\", \"client_gender\", \"ngModel\", \"\", 1, \"form-check-input\"], [\"for\", \"gridRadios2\", 1, \"form-check-label\"], [\"for\", \"inputDate\", 1, \"mt-2\"], [1, \"\"], [\"type\", \"date\", \"id\", \"inputDate\", \"name\", \"client_dob\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"formFile\", 1, \"mt-2\"], [1, \"col-sm-10\"], [\"type\", \"file\", \"name\", \"files\", \"id\", \"formFile\", 1, \"form-control\", 3, \"change\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\"], [2, \"background-color\", \"rgba(0,255,0,0.4)\"], [3, \"value\"]],\n  template: function ClientRegFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"section\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 2)(8, \"div\", 3)(9, \"h5\", 7);\n      i0.ɵɵtext(10, \"Customar Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ClientRegFormComponent_div_11_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementStart(12, \"form\", 9, 10);\n      i0.ɵɵlistener(\"ngSubmit\", function ClientRegFormComponent_Template_form_ngSubmit_12_listener() {\n        return ctx.addNewClient();\n      });\n      i0.ɵɵelementStart(14, \"div\", 11);\n      i0.ɵɵelement(15, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 13);\n      i0.ɵɵelement(17, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13);\n      i0.ɵɵelement(19, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 1);\n      i0.ɵɵelement(21, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 13);\n      i0.ɵɵelement(23, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"select\", 18)(26, \"option\", 19);\n      i0.ɵɵtext(27, \"Choose country...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, ClientRegFormComponent_option_28_Template, 2, 2, \"option\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 21)(30, \"label\", 22);\n      i0.ɵɵtext(31, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"hr\");\n      i0.ɵɵelementStart(33, \"div\", 23);\n      i0.ɵɵelement(34, \"input\", 24);\n      i0.ɵɵelementStart(35, \"label\", 25);\n      i0.ɵɵtext(36, \" Male \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 23);\n      i0.ɵɵelement(38, \"input\", 26);\n      i0.ɵɵelementStart(39, \"label\", 27);\n      i0.ɵɵtext(40, \" Female \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 21)(42, \"label\", 28);\n      i0.ɵɵtext(43, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"hr\");\n      i0.ɵɵelementStart(45, \"div\", 29);\n      i0.ɵɵelement(46, \"input\", 30);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"div\", 21)(48, \"label\", 31);\n      i0.ɵɵtext(49, \"Upload Profile Photo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"hr\");\n      i0.ɵɵelementStart(51, \"div\", 32)(52, \"input\", 33);\n      i0.ɵɵlistener(\"change\", function ClientRegFormComponent_Template_input_change_52_listener($event) {\n        return ctx.profileImg($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"div\", 34)(54, \"button\", 35);\n      i0.ɵɵtext(55, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"button\", 36);\n      i0.ɵɵtext(57, \"Reset\");\n      i0.ɵɵelementEnd()()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.submited);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.country);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".form_field_border[_ngcontent-%COMP%]{\\r\\n    border: 1px solid #55555522;\\r\\n    border-radius: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZS9jbGllbnQvY2xpZW50LXJlZy1mb3JtL2NsaWVudC1yZWctZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtX2ZpZWxkX2JvcmRlcntcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM1NTU1NTUyMjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ClientRegFormComponent","constructor","clientservice","countryService","router","ngOnInit","clientList","countryList","getAllClient","subscribe","client","console","log","getAllCountry","country","profileImg","event","profilImg","target","files","addNewClient","clients","clientForm","value","uploadImg","data","createClient","reset","submited","gotoClientgList","navigate","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["E:\\GME\\Angular\\GME-Angular\\src\\app\\page\\client\\client-reg-form\\client-reg-form.component.html","E:\\GME\\Angular\\GME-Angular\\src\\app\\page\\client\\client-reg-form\\client-reg-form.component.ts"],"sourcesContent":["\r\n\r\n<main id=\"main\" class=\"main\">\r\n\r\n    <!-- Client Registration Form -->\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n\r\n            <div class=\"card-body\">\r\n              <section class=\"section\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-10 offset-1 mt-4\">\r\n                          <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                              <h5 class=\"card-title\">Customar Registration Form</h5>\r\n                              <div style=\"background-color: rgba(0,255,0,0.4)\" *ngIf=\"submited\">\r\n                                <p>New Customar add succsfully</p>\r\n                              </div>\r\n                              <!-- No Labels Form -->\r\n                              <form class=\"row g-3\" (ngSubmit)=\"addNewClient()\" enctype=\"multipart/form-data\" #clientForm = \"ngForm\">\r\n                                <div class=\"col-md-12\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"Your Name\" name=\"client_name\" ngModel>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                  <input type=\"email\" class=\"form-control\" placeholder=\"Email\" name=\"client_email\">\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                  <input type=\"password\" class=\"form-control\" placeholder=\"Password\" name=\"client_password\" ngModel>\r\n                                </div>\r\n                                <div class=\"col-12\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"Address\" name=\"client_address\" ngModel>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"Phone\" name=\"client_phone\" ngModel>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                  <select id=\"inputState\" class=\"form-select\" name=\"client_country\" ngModel>\r\n                                    <option selected>Choose country...</option>\r\n                                    <option *ngFor=\"let coun of country\" value=\"{{coun.cntName}}\">{{coun.cntName}}</option>\r\n                                  </select>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-4 form_field_border\">\r\n                                  <label class=\"mt-2\" for=\"gridRadios1\">Gender</label>\r\n                                  <hr>\r\n                                  \r\n                                    <div class=\"form-check\">\r\n                                      <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\" value=\"male\" name=\"client_gender\" ngModel checked>\r\n                                      <label class=\"form-check-label\" for=\"gridRadios1\">\r\n                                        Male\r\n                                      </label>\r\n                                    </div>\r\n                                    <div class=\"form-check\">\r\n                                      <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\" value=\"female\" name=\"client_gender\" ngModel>\r\n                                      <label class=\"form-check-label\" for=\"gridRadios2\">\r\n                                        Female\r\n                                      </label>\r\n                                    </div>\r\n                                  \r\n\r\n                                </div>\r\n                                <div  class=\"col-md-4 form_field_border\">\r\n                                    <label class=\"mt-2\" for=\"inputDate\" >Date</label>\r\n                                    \r\n                                    <hr>\r\n                                    <div class=\"\">\r\n                                      <input type=\"date\" class=\"form-control\" id=\"inputDate\" name=\"client_dob\" ngModel>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-4 form_field_border\">\r\n                                  <label for=\"formFile\" class=\"mt-2\">Upload Profile Photo</label>\r\n                                  \r\n                                  <hr>\r\n                                  <div class=\"col-sm-10\">\r\n                                    <input class=\"form-control\" type=\"file\" name=\"files\" id=\"formFile\" (change)=\"profileImg($event)\">\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button> \r\n                                \r\n                                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\r\n                                </div>\r\n                              </form><!-- End No Labels Form -->\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n        </div>\r\n    </div><!-- Client Registration From -->\r\n\r\n\r\n</main><!-- End #main -->\r\n\r\n\r\n\r\n\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CountryListModel } from '../country-list/country-list-model.model';\r\nimport { ClientRegForm } from './client-reg-form.model';\r\nimport { ClientRegFormService } from './client-reg-form.service';\r\n\r\n@Component({\r\n  selector: 'app-client-reg-form',\r\n  templateUrl: './client-reg-form.component.html',\r\n  styleUrls: ['./client-reg-form.component.css']\r\n})\r\nexport class ClientRegFormComponent implements OnInit {\r\n  @ViewChild(\"clientForm\")clientForm:NgForm;\r\n\r\n  constructor(\r\n    private clientservice: ClientRegFormService ,\r\n    private countryService: ClientRegFormService ,\r\n    private router:Router\r\n\r\n    ) { }\r\n\r\n\r\n clients: ClientRegForm;\r\n  client: any[] = [];\r\n  country : any[] = [];\r\n  submited: boolean = false;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.clientList();\r\n    this.countryList();\r\n  }\r\n\r\n  clientList() {\r\n    this.clientservice.getAllClient().subscribe(\r\n      client => {\r\n        this.client = client\r\n        console.log(this.client)\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  countryList(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      country => {\r\n        this.country = country\r\n        console.log(this.country)\r\n      }\r\n    )\r\n  }\r\n\r\n  profilImg: File;\r\n  profileImg(event: any){\r\n    console.log(event)\r\n    this.profilImg = event.target.files[0];\r\n  }\r\n\r\n  addNewClient(){\r\n    this.clients = this.clientForm.value;\r\n    console.log(this.profilImg)\r\n    this.clientservice.uploadImg(this.profilImg).subscribe(\r\n      data => { console.log(\"Done\")\r\n        this.clientservice.createClient(this.clients).subscribe(\r\n          data => {this.clientForm.reset()\r\n            this.submited = true;\r\n            this.gotoClientgList();\r\n\r\n          }\r\n        )\r\n      }\r\n    )\r\n\r\n\r\n  \r\n\r\n  }\r\n  gotoClientgList() {\r\n    this.router.navigate(['client_list']);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}