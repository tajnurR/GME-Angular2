{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport { AsyncSubject, BehaviorSubject } from 'rxjs';\nimport { Injectable, NgModule, defineInjectable, EventEmitter, Component, ViewChild, ViewEncapsulation } from '@angular/core';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\nconst MEDIA_STREAM_DEFAULT = {\n  audio: false,\n  video: true\n};\n/** @type {?} */\n\nconst CONFIG_DEFAULT = {\n  src: '',\n  fps: 30,\n  vibrate: 300,\n  decode: 'utf-8',\n  isBeep: true,\n  deviceActive: 0,\n  constraints: MEDIA_STREAM_DEFAULT\n};\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * OVERRIDES\r\n * \\@param variableKey\r\n * \\@param config\r\n * \\@param defaultConfig\r\n * \\@return\r\n * @type {?}\r\n */\n\nconst OVERRIDES =\n/**\r\n* @param {?} variableKey\r\n* @param {?} config\r\n* @param {?} defaultConfig\r\n* @return {?}\r\n*/\n(variableKey, config, defaultConfig) => {\n  if (config && Object.keys(config[variableKey]).length) {\n    for (const key in defaultConfig) {\n      /** @type {?} */\n      const cloneDeep = JSON.parse(JSON.stringify(Object.assign({}, config[variableKey], {\n        [key]:\n        /** @type {?} */\n        defaultConfig[key]\n      })));\n      config[variableKey] = config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\n    }\n\n    return config[variableKey];\n  } else {\n    return defaultConfig;\n  }\n};\n/**\r\n * Rxjs complete\r\n * \\@param as\r\n * \\@param data\r\n * \\@param error\r\n * @type {?}\r\n */\n\n\nconst AS_COMPLETE =\n/**\r\n* @param {?} as\r\n* @param {?} data\r\n* @param {?=} error\r\n* @return {?}\r\n*/\n(as, data, error = null) => {\n  error ? as.error(error) : as.next(data);\n  as.complete();\n};\n/**\r\n * CAMERA_BEEP\r\n * \\@param isPlay\r\n * \\@return\r\n * @type {?}\r\n */\n\n\nconst PLAY_AUDIO =\n/**\r\n* @param {?=} isPlay\r\n* @return {?}\r\n*/\n(isPlay = false) => {\n  if (isPlay === false) return;\n  /** @type {?} */\n\n  const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU' + Array(300).join('101')); // when the sound has been loaded, execute your code\n\n  audio.oncanplaythrough =\n  /**\r\n  * @return {?}\r\n  */\n  () => {\n    /** @type {?} */\n    const promise = audio.play();\n\n    if (promise) {\n      promise.catch(\n      /**\r\n      * @param {?} e\r\n      * @return {?}\r\n      */\n      e => {\n        if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") ;\n      });\n    }\n  };\n};\n/**\r\n * HAS_OWN_PROPERTY\r\n * Fix issue vs ng v 6-7-8\r\n * Optional chaining (?.) just have on ng v 9++\r\n * eg: HAS_OWN_PROPERTY(config, 'frameOptions.style') // output: boolean\r\n * \\@param obj\r\n * \\@param propertyPath\r\n * \\@return\r\n * @type {?}\r\n */\n\n\nconst HAS_OWN_PROPERTY =\n/**\r\n* @param {?} obj\r\n* @param {?} propertyPath\r\n* @return {?}\r\n*/\n(obj, propertyPath) => {\n  /** @type {?} */\n  const properties = propertyPath.split(\".\");\n\n  for (let i = 0; i < properties.length; i++) {\n    /** @type {?} */\n    let prop = properties[i];\n\n    if (!obj.hasOwnProperty(prop)) {\n      return false;\n    } else {\n      obj = obj[prop];\n    }\n  }\n\n  return true;\n};\n/**\r\n * DRAW_RESULT_APPEND_CHILD\r\n * \\@param code\r\n * \\@param oriCanvas\r\n * \\@param elTarget\r\n * @type {?}\r\n */\n\n\nconst DRAW_RESULT_APPEND_CHILD =\n/**\r\n* @param {?} code\r\n* @param {?} oriCanvas\r\n* @param {?} elTarget\r\n* @return {?}\r\n*/\n(code, oriCanvas, elTarget) => {\n  /** @type {?} */\n  let widthZoom;\n  /** @type {?} */\n\n  let heightZoom;\n  /** @type {?} */\n\n  let oriWidth = oriCanvas.width;\n  /** @type {?} */\n\n  let oriHeight = oriCanvas.height;\n  /** @type {?} */\n\n  let oriWHRatio = oriWidth / oriHeight;\n  /** @type {?} */\n\n  let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\n  /** @type {?} */\n\n  let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\n  /** @type {?} */\n\n  let imgWHRatio = imgWidth / imgHeight;\n  elTarget.innerHTML = '';\n\n  if (oriWHRatio > imgWHRatio) {\n    widthZoom = imgWidth / oriWidth;\n    heightZoom = imgWidth / oriWHRatio / oriHeight;\n  } else {\n    heightZoom = imgHeight / oriHeight;\n    widthZoom = imgHeight * oriWHRatio / oriWidth;\n  }\n\n  for (let i = 0; i < code.length; i++) {\n    /** @type {?} */\n    const _code = code[i]; // New canvas\n\n    /** @type {?} */\n\n    let cvs = document.createElement(\"canvas\");\n    /** @type {?} */\n\n    let ctx =\n    /** @type {?} */\n    cvs.getContext('2d', {\n      willReadFrequently: true\n    });\n    /** @type {?} */\n\n    let loc = {};\n    /** @type {?} */\n\n    let X = [];\n    /** @type {?} */\n\n    let Y = []; // Point x,y\n\n    /** @type {?} */\n\n    const points = _code.points;\n\n    for (let j = 0; j < points.length; j++) {\n      /** @type {?} */\n      const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\n      /** @type {?} */\n\n      const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\n      loc[`x${j + 1}`] = xj;\n      loc[`y${j + 1}`] = yj;\n      X.push(xj);\n      Y.push(yj);\n    } // Min max\n\n    /** @type {?} */\n\n\n    let maxX = Math.max(...X);\n    /** @type {?} */\n\n    let minX = Math.min(...X);\n    /** @type {?} */\n\n    let maxY = Math.max(...Y);\n    /** @type {?} */\n\n    let minY = Math.min(...Y); // Add class\n\n    cvs.setAttribute('class', 'qrcode-polygon'); // Size with screen zoom\n\n    if (oriWHRatio > imgWHRatio) {\n      cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\n      cvs.style.left = minX * widthZoom + \"px\";\n      cvs.width = (maxX - minX) * widthZoom;\n      cvs.height = (maxY - minY) * widthZoom;\n    } else {\n      cvs.style.top = minY * heightZoom + \"px\";\n      cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n      cvs.width = (maxX - minX) * heightZoom;\n      cvs.height = (maxY - minY) * heightZoom;\n    } // Style for canvas\n\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = 'green';\n    ctx.fillStyle = \"#55f02880\"; // polygon [x,y, x,y, x,y.....];\n\n    /** @type {?} */\n\n    const polygon = [];\n\n    for (let k = 0; k < X.length; k++) {\n      polygon.push((loc[`x${k + 1}`] - minX) * heightZoom);\n      polygon.push((loc[`y${k + 1}`] - minY) * widthZoom);\n    } // Copy array\n\n    /** @type {?} */\n\n\n    const shape =\n    /** @type {?} */\n    polygon.slice(0); // Draw polygon\n\n    ctx.beginPath();\n    ctx.moveTo(shape.shift(), shape.shift());\n\n    while (shape.length) {\n      ctx.lineTo(shape.shift(), shape.shift()); //x,y\n    }\n\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke(); // Tooltip result\n\n    /** @type {?} */\n\n    const qrcodeTooltipTemp = document.createElement('div');\n    qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\n    qrcodeTooltipTemp.innerText = _code.value; // Tooltip box\n\n    /** @type {?} */\n\n    const qrcodeTooltip = document.createElement('div');\n    qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\n    qrcodeTooltip.appendChild(qrcodeTooltipTemp);\n    heightZoom = imgHeight / oriHeight;\n    widthZoom = imgHeight * oriWHRatio / oriWidth;\n    qrcodeTooltip.style.fontSize = widthZoom * 15 + 'px';\n    qrcodeTooltip.style.top = minY * heightZoom + \"px\";\n    qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n    qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\n    qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\"; // Result text\n\n    /** @type {?} */\n\n    const resultText = document.createElement('span');\n    resultText.innerText = _code.value;\n    resultText.style.fontSize = widthZoom * 13 + 'px'; // Set position result text\n\n    resultText.style.top = minY * heightZoom + -20 * heightZoom + \"px\";\n    resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n\n    if (elTarget) {\n      elTarget.appendChild(qrcodeTooltip);\n      elTarget.appendChild(resultText);\n      elTarget.appendChild(cvs);\n    }\n  }\n}\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * @param code\r\n * @param cvs\r\n */\n;\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * \\@param code\r\n * \\@param cvs\r\n * @type {?}\r\n */\n\n\nconst DRAW_RESULT_ON_CANVAS =\n/**\r\n* @param {?} code\r\n* @param {?} cvs\r\n* @return {?}\r\n*/\n(code, cvs) => {\n  /** @type {?} */\n  let ctx =\n  /** @type {?} */\n  cvs.getContext('2d', {\n    willReadFrequently: true\n  });\n\n  for (let i = 0; i < code.length; i++) {\n    /** @type {?} */\n    const _code = code[i];\n    /** @type {?} */\n\n    let loc = {};\n    /** @type {?} */\n\n    let X = [];\n    /** @type {?} */\n\n    let Y = []; // Point x,y\n\n    /** @type {?} */\n\n    const points = _code.points;\n\n    for (let j = 0; j < points.length; j++) {\n      /** @type {?} */\n      const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\n      /** @type {?} */\n\n      const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\n      loc[`x${j + 1}`] = xj;\n      loc[`y${j + 1}`] = yj;\n      X.push(xj);\n      Y.push(yj);\n    } // Min max\n\n    /** @type {?} */\n\n\n    let minX = Math.min(...X);\n    /** @type {?} */\n\n    let minY = Math.min(...Y); // Style for canvas\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = 'green';\n    ctx.fillStyle = \"#55f02880\";\n    ctx.font = \"15px serif\";\n    FILL_TEXT_MULTI_LINE(ctx, _code.value, minX, minY - 5); // polygon [x,y, x,y, x,y.....];\n\n    /** @type {?} */\n\n    const polygon = [];\n\n    for (let k = 0; k < X.length; k++) {\n      polygon.push(loc[`x${k + 1}`]);\n      polygon.push(loc[`y${k + 1}`]);\n    } // Copy array\n\n    /** @type {?} */\n\n\n    const shape =\n    /** @type {?} */\n    polygon.slice(0); // Draw polygon\n\n    ctx.beginPath();\n    ctx.moveTo(shape.shift(), shape.shift());\n\n    while (shape.length) {\n      ctx.lineTo(shape.shift(), shape.shift()); //x,y\n    }\n\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  }\n}\n/**\r\n * READ_AS_DATA_URL\r\n * @param file\r\n * @param config\r\n * @return Promise\r\n */\n;\n/**\r\n * READ_AS_DATA_URL\r\n * \\@param file\r\n * \\@param config\r\n * \\@return Promise\r\n * @type {?}\r\n */\n\n\nconst READ_AS_DATA_URL =\n/**\r\n* @param {?} file\r\n* @param {?} config\r\n* @return {?}\r\n*/\n(file, config) => {\n  /**\r\n   * overrides *\r\n   * @type {?}\r\n   */\n  let decode = HAS_OWN_PROPERTY(config, 'decode') ? config.decode : CONFIG_DEFAULT.decode;\n  /** drawImage **/\n\n  return new Promise(\n  /**\r\n  * @param {?} resolve\r\n  * @param {?} reject\r\n  * @return {?}\r\n  */\n  (resolve, reject) => {\n    /** @type {?} */\n    const fileReader = new FileReader();\n\n    fileReader.onload =\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      /** @type {?} */\n      const objectFile = {\n        name: file.name,\n        file: file,\n        url: URL.createObjectURL(file)\n      }; // Set the src of this Image object.\n\n      /** @type {?} */\n\n      const image = new Image(); // Setting cross origin value to anonymous\n\n      image.setAttribute('crossOrigin', 'anonymous'); // When our image has loaded.\n\n      image.onload =\n      /**\r\n      * @return {?}\r\n      */\n      () => __awaiter(this, void 0, void 0, function* () {\n        // Get the canvas element by using the getElementById method.\n\n        /** @type {?} */\n        const canvas = document.createElement('canvas'); // HTMLImageElement size\n\n        canvas.width = image.naturalWidth || image.width;\n        canvas.height = image.naturalHeight || image.height; // Get a 2D drawing context for the canvas.\n\n        /** @type {?} */\n\n        const ctx =\n        /** @type {?} */\n        canvas.getContext('2d'); // Draw image\n\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height); // Data image\n\n        /** @type {?} */\n\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height); // Scanner\n\n        /** @type {?} */\n\n        const code = yield zbarWasm.scanImageData(imageData);\n\n        if (code && code.length) {\n          // Decode\n          code.forEach(\n          /**\r\n          * @param {?} s\r\n          * @return {?}\r\n          */\n          s => s.value = s.decode(decode && decode.toLocaleLowerCase())); // Overlay\n\n          DRAW_RESULT_ON_CANVAS(code, canvas); // Emit object\n\n          /** @type {?} */\n\n          const blob = yield CANVAS_TO_BLOB(canvas);\n          /** @type {?} */\n\n          const url = URL.createObjectURL(blob);\n          /** @type {?} */\n\n          const blobToFile =\n          /**\r\n          * @param {?} theBlob\r\n          * @param {?} fileName\r\n          * @return {?}\r\n          */\n          (theBlob, fileName) => new File([theBlob], fileName, {\n            lastModified: new Date().getTime(),\n            type: theBlob.type\n          });\n\n          resolve(Object.assign({}, objectFile, {\n            data: code,\n            url: url,\n            canvas: canvas,\n            file: blobToFile(blob, objectFile.name)\n          }));\n        } else {\n          resolve(Object.assign({}, objectFile, {\n            data: code,\n            canvas: canvas\n          }));\n        }\n      }); // Set src\n\n\n      image.src = objectFile.url;\n    };\n\n    fileReader.onerror =\n    /**\r\n    * @param {?} error\r\n    * @return {?}\r\n    */\n    error => reject(error);\n\n    fileReader.readAsDataURL(file);\n  });\n}\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * @param canvas\r\n * @param type\r\n * @return Promise\r\n */\n;\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * \\@param canvas\r\n * \\@param type\r\n * \\@return Promise\r\n * @type {?}\r\n */\n\n\nconst CANVAS_TO_BLOB =\n/**\r\n* @param {?} canvas\r\n* @param {?=} type\r\n* @return {?}\r\n*/\n(canvas, type) => {\n  return new Promise(\n  /**\r\n  * @param {?} resolve\r\n  * @param {?} reject\r\n  * @return {?}\r\n  */\n  (resolve, reject) => canvas.toBlob(\n  /**\r\n  * @param {?} blob\r\n  * @return {?}\r\n  */\n  blob => resolve(blob), type));\n}\n/**\r\n * Convert blob to file\r\n * @param theBlob\r\n * @param fileName\r\n * @return File\r\n */\n;\n/**\r\n * Convert blob to file\r\n * \\@param theBlob\r\n * \\@param fileName\r\n * \\@return File\r\n * @type {?}\r\n */\n\n\nconst BLOB_TO_FILE =\n/**\r\n* @param {?} theBlob\r\n* @param {?} fileName\r\n* @return {?}\r\n*/\n(theBlob, fileName) => {\n  return new File([theBlob], fileName, {\n    lastModified: new Date().getTime(),\n    type: theBlob.type\n  });\n}\n/**\r\n * FILES_TO_SCAN\r\n * @param files\r\n * @return AsyncSubject\r\n */\n;\n/**\r\n * FILES_TO_SCAN\r\n * \\@param files\r\n * \\@return AsyncSubject\r\n * @type {?}\r\n */\n\n\nconst FILES_TO_SCAN =\n/**\r\n* @param {?=} files\r\n* @param {?=} configs\r\n* @param {?=} as\r\n* @return {?}\r\n*/\n(files = [], configs, as = new AsyncSubject()) => {\n  Promise.all(Object.assign([], files).map(\n  /**\r\n  * @param {?} m\r\n  * @return {?}\r\n  */\n  m => READ_AS_DATA_URL(m, configs))).then(\n  /**\r\n  * @param {?} img\r\n  * @return {?}\r\n  */\n  img => AS_COMPLETE(as, img)).catch(\n  /**\r\n  * @param {?} error\r\n  * @return {?}\r\n  */\n  error => AS_COMPLETE(as, null, error));\n  return as;\n}\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * @param ctx\r\n * @param text\r\n * @param x\r\n * @param y\r\n */\n;\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * \\@param ctx\r\n * \\@param text\r\n * \\@param x\r\n * \\@param y\r\n * @type {?}\r\n */\n\n\nconst FILL_TEXT_MULTI_LINE =\n/**\r\n* @param {?} ctx\r\n* @param {?} text\r\n* @param {?} x\r\n* @param {?} y\r\n* @return {?}\r\n*/\n(ctx, text, x, y) => {\n  /** @type {?} */\n  let lineHeight = ctx.measureText(\"M\").width * 1.2;\n  /** @type {?} */\n\n  let lines = text.split(\"\\n\");\n\n  for (var i = 0; i < lines.length; ++i) {\n    ctx.fillText(lines[i], x, y);\n    ctx.strokeText(lines[i], x, y);\n    y += lineHeight;\n  }\n}\n/**\r\n * VIBRATE\r\n * Bật rung trên mobile\r\n * @param time\r\n */\n;\n/**\r\n * VIBRATE\r\n * Bật rung trên mobile\r\n * \\@param time\r\n * @type {?}\r\n */\n\n\nconst VIBRATE =\n/**\r\n* @param {?} time\r\n* @return {?}\r\n*/\ntime => {\n  time && IS_MOBILE() && window.navigator.vibrate(time);\n};\n/**\r\n * IS_MOBILE\r\n * \\@return\r\n * @type {?}\r\n */\n\n\nconst IS_MOBILE =\n/**\r\n* @return {?}\r\n*/\n() => {\n  /** @type {?} */\n  const vendor = navigator.userAgent || navigator['vendor'] || window['opera'];\n  return !!(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(vendor) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(vendor.substr(0, 4)));\n};\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nclass NgxScannerQrcodeService {\n  /**\r\n   * Load files\r\n   * @param {?=} files\r\n   * @return {?} AsyncSubject\r\n   */\n  loadFiles(files = []) {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    Promise.all(Object.assign([], files).map(\n    /**\r\n    * @param {?} m\r\n    * @return {?}\r\n    */\n    m => this.readAsDataURL(m))).then(\n    /**\r\n    * @param {?} img\r\n    * @return {?}\r\n    */\n    img => AS_COMPLETE(as, img)).catch(\n    /**\r\n    * @param {?} error\r\n    * @return {?}\r\n    */\n    error => AS_COMPLETE(as, null, error));\n    return as;\n  }\n  /**\r\n   * loadFilesToScan\r\n   * @param {?=} files\r\n   * @param {?=} config\r\n   * @return {?}\r\n   */\n\n\n  loadFilesToScan(files = [], config) {\n    return FILES_TO_SCAN(files, config);\n  }\n  /**\r\n   * readAsDataURL\r\n   * @private\r\n   * @param {?} file\r\n   * @return {?} Promise\r\n   */\n\n\n  readAsDataURL(file) {\n    /** drawImage **/\n    return new Promise(\n    /**\r\n    * @param {?} resolve\r\n    * @param {?} reject\r\n    * @return {?}\r\n    */\n    (resolve, reject) => {\n      /** @type {?} */\n      const fileReader = new FileReader();\n\n      fileReader.onload =\n      /**\r\n      * @return {?}\r\n      */\n      () => {\n        /** @type {?} */\n        const objectFile = {\n          name: file.name,\n          file: file,\n          url: URL.createObjectURL(file)\n        };\n        resolve(objectFile);\n      };\n\n      fileReader.onerror =\n      /**\r\n      * @param {?} error\r\n      * @return {?}\r\n      */\n      error => reject(error);\n\n      fileReader.readAsDataURL(file);\n    });\n  }\n\n}\n\nNgxScannerQrcodeService.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: 'root'\n  }]\n}];\n/** @nocollapse */\n\nNgxScannerQrcodeService.ngInjectableDef = defineInjectable({\n  factory: function NgxScannerQrcodeService_Factory() {\n    return new NgxScannerQrcodeService();\n  },\n  token: NgxScannerQrcodeService,\n  providedIn: \"root\"\n});\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nclass NgxScannerQrcodeComponent {\n  constructor() {\n    /**\r\n     * EventEmitter\r\n     */\n    this.event = new EventEmitter();\n    /**\r\n     * Input\r\n     */\n\n    this.src = CONFIG_DEFAULT.src;\n    this.fps = CONFIG_DEFAULT.fps;\n    this.vibrate = CONFIG_DEFAULT.vibrate;\n    this.decode = CONFIG_DEFAULT.decode;\n    this.isBeep = CONFIG_DEFAULT.isBeep;\n    this.deviceActive = CONFIG_DEFAULT.deviceActive;\n    this.config = CONFIG_DEFAULT;\n    this.constraints = CONFIG_DEFAULT.constraints;\n    /**\r\n     * Export\r\n     */\n\n    this.isStart = false;\n    this.isLoading = false;\n    this.isTorch = false;\n    this.data = new BehaviorSubject([]);\n    this.devices = new BehaviorSubject([]);\n    this.dataForResize = [];\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  ngOnInit() {\n    this.overrideConfig();\n\n    if (this.src) {\n      this.loadImage(this.src);\n    }\n\n    this.resize();\n  }\n  /**\r\n   * start\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  start() {\n    /** @type {?} */\n    const as = new AsyncSubject();\n\n    if (this.isStart) {\n      // Reject\n      AS_COMPLETE(as, false);\n    } else {\n      // mediaDevices\n      this.loadAllDevices(as);\n    }\n\n    return as;\n  }\n  /**\r\n   * playDevice\r\n   * @param {?} deviceId\r\n   * @param {?=} as\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  playDevice(deviceId, as = new AsyncSubject()) {\n    /** @type {?} */\n    const existDeviceId = this.isStart ? this.getConstraints().deviceId != deviceId : true;\n\n    switch (true) {\n      case deviceId == 'null' || deviceId == null:\n        this.stop();\n        AS_COMPLETE(as, false);\n        break;\n\n      case deviceId && existDeviceId:\n        stop();\n        this.stop();\n        clearInterval(this.rAF_ID); // Loading on\n\n        this.status(false, true);\n        /** @type {?} */\n\n        const constraints = {\n          audio: false,\n          video: typeof (this.constraints && this.constraints.video) === 'boolean' ? {\n            deviceId: deviceId\n          } : Object.assign({\n            deviceId: deviceId\n          }, this.constraints && this.constraints.video)\n        };\n        this.deviceActive = this.devices.value.findIndex(\n        /**\r\n        * @param {?} f\r\n        * @return {?}\r\n        */\n        f => f.deviceId == deviceId); // MediaStream\n\n        navigator.mediaDevices.getUserMedia(constraints).then(\n        /**\r\n        * @param {?} stream\r\n        * @return {?}\r\n        */\n        stream => {\n          this.video.nativeElement.srcObject = stream;\n\n          this.video.nativeElement.onloadedmetadata =\n          /**\r\n          * @return {?}\r\n          */\n          () => {\n            this.video.nativeElement.play();\n            this.requestAnimationFrame();\n            this.status(true, false);\n            AS_COMPLETE(as, true);\n          };\n        }).catch(\n        /**\r\n        * @param {?} error\r\n        * @return {?}\r\n        */\n        error => {\n          this.status(false, false);\n          this.eventEmit(false);\n          AS_COMPLETE(as, false, error);\n        });\n        break;\n\n      default:\n        AS_COMPLETE(as, false);\n        break;\n    }\n\n    return as;\n  }\n  /**\r\n   * stop\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  stop() {\n    this.eventEmit(null);\n    this.status(false, false);\n    /** @type {?} */\n\n    const as = new AsyncSubject();\n\n    try {\n      this.removeCanvas();\n      clearInterval(this.rAF_ID);\n\n      /** @type {?} */\n      this.video.nativeElement.srcObject.getTracks().forEach(\n      /**\r\n      * @param {?} track\r\n      * @return {?}\r\n      */\n      track => {\n        track.stop();\n        AS_COMPLETE(as, true);\n      });\n    } catch (error) {\n      AS_COMPLETE(as, false,\n      /** @type {?} */\n      error);\n    }\n\n    return as;\n  }\n  /**\r\n   * play\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  play() {\n    /** @type {?} */\n    const as = new AsyncSubject();\n\n    if (this.isPause) {\n      this.video.nativeElement.play();\n      this.requestAnimationFrame();\n      AS_COMPLETE(as, true);\n    } else {\n      AS_COMPLETE(as, false);\n    }\n\n    return as;\n  }\n  /**\r\n   * pause\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  pause() {\n    /** @type {?} */\n    const as = new AsyncSubject();\n\n    if (this.isStart) {\n      clearInterval(this.rAF_ID);\n      this.video.nativeElement.pause();\n      AS_COMPLETE(as, true);\n    } else {\n      AS_COMPLETE(as, false);\n    }\n\n    return as;\n  }\n  /**\r\n   * loadImage\r\n   * @param {?} src\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  loadImage(src) {\n    /** @type {?} */\n    const as = new AsyncSubject(); // Loading on\n\n    this.status(false, true); // Set the src of this Image object.\n\n    /** @type {?} */\n\n    const image = new Image(); // Setting cross origin value to anonymous\n\n    image.setAttribute('crossOrigin', 'anonymous'); // When our image has loaded.\n\n    image.onload =\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      this.drawImage(image,\n      /**\r\n      * @param {?} flag\r\n      * @return {?}\r\n      */\n      flag => {\n        this.status(false, false);\n        AS_COMPLETE(as, flag);\n      });\n    }; // Set src\n\n\n    image.src = src;\n    return as;\n  }\n  /**\r\n   * torcher\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  torcher() {\n    /** @type {?} */\n    const as = this.applyConstraints({\n      torch: this.isTorch\n    });\n    as.subscribe(\n    /**\r\n    * @return {?}\r\n    */\n    () => false,\n    /**\r\n    * @return {?}\r\n    */\n    () => this.isTorch = !this.isTorch);\n    return as;\n  }\n  /**\r\n   * applyConstraints\r\n   * @param {?} constraints\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  applyConstraints(constraints) {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    /** @type {?} */\n\n    const stream =\n    /** @type {?} */\n    this.video.nativeElement.srcObject;\n    /** @type {?} */\n\n    const videoTrack =\n    /** @type {?} */\n    stream.getVideoTracks()[0];\n    /** @type {?} */\n\n    const imageCapture = new\n    /** @type {?} */\n    window.ImageCapture(videoTrack);\n    imageCapture.getPhotoCapabilities().then(\n    /**\r\n    * @return {?}\r\n    */\n    () => __awaiter(this, void 0, void 0, function* () {\n      yield videoTrack.applyConstraints(\n      /** @type {?} */\n      {\n        advanced: [constraints]\n      });\n      AS_COMPLETE(as, true);\n    })).catch(\n    /**\r\n    * @param {?} error\r\n    * @return {?}\r\n    */\n    error => {\n      switch (error && error.name) {\n        case 'NotFoundError':\n        case 'DevicesNotFoundError':\n          AS_COMPLETE(as, false,\n          /** @type {?} */\n          'Required track is missing');\n          break;\n\n        case 'NotReadableError':\n        case 'TrackStartError':\n          AS_COMPLETE(as, false,\n          /** @type {?} */\n          'Webcam or mic are already in use');\n          break;\n\n        case 'OverconstrainedError':\n        case 'ConstraintNotSatisfiedError':\n          AS_COMPLETE(as, false,\n          /** @type {?} */\n          'Constraints can not be satisfied by avb. devices');\n          break;\n\n        case 'NotAllowedError':\n        case 'PermissionDeniedError':\n          AS_COMPLETE(as, false,\n          /** @type {?} */\n          'Permission denied in browser');\n          break;\n\n        case 'TypeError':\n          AS_COMPLETE(as, false,\n          /** @type {?} */\n          'Empty constraints object');\n          break;\n\n        default:\n          AS_COMPLETE(as, false,\n          /** @type {?} */\n          error);\n          break;\n      }\n    });\n    return as;\n  }\n\n  /**\r\n   * getConstraints\r\n   * @return {?}\r\n   */\n  getConstraints() {\n    /** @type {?} */\n    const stream =\n    /** @type {?} */\n    this.video.nativeElement.srcObject;\n    /** @type {?} */\n\n    const videoTrack = stream &&\n    /** @type {?} */\n    stream.getVideoTracks()[0];\n    return videoTrack &&\n    /** @type {?} */\n    videoTrack.getConstraints();\n  }\n  /**\r\n   * download\r\n   * @param {?=} fileName\r\n   * @return {?} AsyncSubject\r\n   */\n\n\n  download(fileName = `ngx-scanner-qrcode-${Date.now()}.png`) {\n    /** @type {?} */\n    const as = new AsyncSubject();\n    /** @type {?} */\n\n    const run =\n    /**\r\n    * @return {?}\r\n    */\n    () => __awaiter(this, void 0, void 0, function* () {\n      /** @type {?} */\n      const blob = yield CANVAS_TO_BLOB(this.canvas.nativeElement);\n      /** @type {?} */\n\n      const file = BLOB_TO_FILE(blob, fileName);\n      FILES_TO_SCAN([file], this.config, as).subscribe(\n      /**\r\n      * @param {?} res\r\n      * @return {?}\r\n      */\n      res => {\n        res.forEach(\n        /**\r\n        * @param {?} item\r\n        * @return {?}\r\n        */\n        item => {\n          /** @type {?} */\n          const link = document.createElement('a');\n          link.href = item.url;\n          link.download = item.name;\n          link.click();\n          link.remove();\n        });\n      });\n    });\n\n    run();\n    return as;\n  }\n  /**\r\n   * window: resize\r\n   * Draw again!\r\n   * @private\r\n   * @return {?}\r\n   */\n\n\n  resize() {\n    window.addEventListener(\"resize\",\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      if (this.dataForResize && this.dataForResize.length) {\n        DRAW_RESULT_APPEND_CHILD(\n        /** @type {?} */\n        this.dataForResize, this.canvas.nativeElement, this.resultsPanel.nativeElement);\n      }\n    });\n  }\n  /**\r\n   * Override config\r\n   * @private\r\n   * @return {?} void\r\n   */\n\n\n  overrideConfig() {\n    if (HAS_OWN_PROPERTY(this.config, 'src')) this.src = this.config.src;\n    if (HAS_OWN_PROPERTY(this.config, 'fps')) this.fps = this.config.fps;\n    if (HAS_OWN_PROPERTY(this.config, 'vibrate')) this.vibrate = this.config.vibrate;\n    if (HAS_OWN_PROPERTY(this.config, 'decode')) this.decode = this.config.decode;\n    if (HAS_OWN_PROPERTY(this.config, 'isBeep')) this.isBeep = this.config.isBeep;\n    if (HAS_OWN_PROPERTY(this.config, 'deviceActive')) this.deviceActive = this.config.deviceActive;\n    if (HAS_OWN_PROPERTY(this.config, 'constraints')) this.constraints = OVERRIDES('constraints', this.config, MEDIA_STREAM_DEFAULT);\n  }\n  /**\r\n   * loadAllDevices\r\n   * @private\r\n   * @param {?} as\r\n   * @return {?}\r\n   */\n\n\n  loadAllDevices(as) {\n    navigator.mediaDevices.enumerateDevices().then(\n    /**\r\n    * @param {?} devices\r\n    * @return {?}\r\n    */\n    devices => {\n      /** @type {?} */\n      let cameraDevices = [];\n      devices.forEach(\n      /**\r\n      * @param {?} f\r\n      * @return {?}\r\n      */\n      f => f.kind == 'videoinput' && cameraDevices.push(f));\n      this.devices.next(cameraDevices);\n\n      if (cameraDevices.length > 0) {\n        /** @type {?} */\n        const index = Math.max(0, cameraDevices.length > this.deviceActive ? this.deviceActive : 0);\n        this.playDevice(cameraDevices[index].deviceId, as);\n      } else {\n        AS_COMPLETE(as, false,\n        /** @type {?} */\n        'No camera detected.');\n      }\n    });\n  }\n  /**\r\n   * drawImage\r\n   * @private\r\n   * @param {?} element\r\n   * @param {?=} callback\r\n   * @return {?}\r\n   */\n\n\n  drawImage(element, callback =\n  /**\r\n  * @return {?}\r\n  */\n  () => {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Get the canvas element by using the getElementById method.\n\n      /** @type {?} */\n      const canvas = this.canvas.nativeElement; // Get a 2D drawing context for the canvas.\n\n      /** @type {?} */\n\n      const ctx =\n      /** @type {?} */\n      canvas.getContext('2d', {\n        willReadFrequently: true\n      }); // HTMLImageElement size\n\n      if (element instanceof HTMLImageElement) {\n        canvas.width = element.naturalWidth;\n        canvas.height = element.naturalHeight;\n        element.style.visibility = '';\n        this.video.nativeElement.style.visibility = 'hidden';\n        this.video.nativeElement.style.height = canvas.offsetHeight + 'px';\n      } // HTMLVideoElement size\n\n\n      if (element instanceof HTMLVideoElement) {\n        canvas.width = element.videoWidth;\n        canvas.height = element.videoHeight;\n        element.style.visibility = '';\n        this.canvas.nativeElement.style.visibility = 'hidden';\n      }\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Draw image\n\n      ctx.drawImage(element, 0, 0, canvas.width, canvas.height); // Data image\n\n      /** @type {?} */\n\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height); // Draw frame\n\n      /** @type {?} */\n\n      const code = yield zbarWasm.scanImageData(imageData);\n\n      if (code && code.length) {\n        // Decode\n        code.forEach(\n        /**\r\n        * @param {?} s\r\n        * @return {?}\r\n        */\n        s => s.value = s.decode(this.decode && this.decode.toLocaleLowerCase())); // Overlay\n\n        DRAW_RESULT_APPEND_CHILD(code, Object.freeze(this.canvas.nativeElement), this.resultsPanel.nativeElement); // To blob and emit data\n\n        /** @type {?} */\n\n        const EMIT_DATA =\n        /**\r\n        * @return {?}\r\n        */\n        () => {\n          this.eventEmit(code);\n          this.dataForResize = code;\n        }; // HTMLImageElement\n\n\n        if (element instanceof HTMLImageElement) {\n          callback(true);\n          EMIT_DATA();\n          VIBRATE(this.vibrate);\n          PLAY_AUDIO(this.isBeep);\n        } // HTMLVideoElement\n\n\n        if (element instanceof HTMLVideoElement) {\n          EMIT_DATA();\n          VIBRATE(this.vibrate);\n          PLAY_AUDIO(this.isBeep);\n        }\n      } else {\n        callback(false);\n        this.removeCanvas();\n        this.dataForResize = code;\n      }\n    });\n  }\n  /**\r\n   * removeCanvas\r\n   * @private\r\n   * @return {?}\r\n   */\n\n\n  removeCanvas() {\n    Object.assign([], this.resultsPanel.nativeElement.childNodes).forEach(\n    /**\r\n    * @param {?} el\r\n    * @return {?}\r\n    */\n    el => this.resultsPanel.nativeElement.removeChild(el));\n  }\n  /**\r\n   * status\r\n   * @private\r\n   * @param {?} isStart\r\n   * @param {?} isLoading\r\n   * @return {?}\r\n   */\n\n\n  status(isStart, isLoading) {\n    this.isStart = isStart;\n    this.isLoading = isLoading;\n  }\n  /**\r\n   * eventEmit\r\n   * @private\r\n   * @param {?=} response\r\n   * @return {?}\r\n   */\n\n\n  eventEmit(response = false) {\n    response !== false && this.data.next(response || {\n      data: null\n    });\n    response !== false && this.event.emit(response || {\n      data: null\n    });\n  }\n  /**\r\n   * Single-thread\r\n   * Loop Recording on Camera\r\n   * Must be destroy request\r\n   * Not using: requestAnimationFrame\r\n   * @private\r\n   * @return {?}\r\n   */\n\n\n  requestAnimationFrame() {\n    this.rAF_ID = setInterval(\n    /**\r\n    * @return {?}\r\n    */\n    () => {\n      if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\n        this.drawImage(this.video.nativeElement);\n      }\n    }, this.fps);\n  }\n  /**\r\n   * Status of camera\r\n   * @return {?} boolean\r\n   */\n\n\n  get isPause() {\n    return this.isStart && this.video.nativeElement.paused;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  ngOnDestroy() {\n    this.pause();\n  }\n\n}\n\nNgxScannerQrcodeComponent.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'ngx-scanner-qrcode',\n    template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`,\n    host: {\n      'class': 'ngx-scanner-qrcode'\n    },\n    exportAs: 'scanner',\n    inputs: ['src', 'fps', 'vibrate', 'decode', 'isBeep', 'deviceActive', 'config', 'constraints'],\n    outputs: ['event'],\n    queries: {\n      video: new ViewChild('video'),\n      canvas: new ViewChild('canvas'),\n      resultsPanel: new ViewChild('resultsPanel')\n    },\n    encapsulation: ViewEncapsulation.None,\n    styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;color:red;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute}.qrcode-tooltip-temp{bottom:0;left:50%;padding:5px;color:#fff;text-align:left;display:none;max-width:450px;border-radius:5px;width:-moz-max-content;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}\"]\n  }]\n}];\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @enum {number} */\n\nconst ScannerQRCodeSymbolType = {\n  ScannerQRCode_NONE: 0,\n  ScannerQRCode_PARTIAL: 1,\n  ScannerQRCode_EAN2: 2,\n  ScannerQRCode_EAN5: 5,\n  ScannerQRCode_EAN8: 8,\n  ScannerQRCode_UPCE: 9,\n  ScannerQRCode_ISBN10: 10,\n  ScannerQRCode_UPCA: 12,\n  ScannerQRCode_EAN13: 13,\n  ScannerQRCode_ISBN13: 14,\n  ScannerQRCode_COMPOSITE: 15,\n  ScannerQRCode_I25: 25,\n  ScannerQRCode_DATABAR: 34,\n  ScannerQRCode_DATABAR_EXP: 35,\n  ScannerQRCode_CODABAR: 38,\n  ScannerQRCode_CODE39: 39,\n  ScannerQRCode_PDF417: 57,\n  ScannerQRCode_QRCODE: 64,\n  ScannerQRCode_SQCODE: 80,\n  ScannerQRCode_CODE93: 93,\n  ScannerQRCode_CODE128: 128,\n\n  /*\r\n   * Please see _ScannerQRCode_get_symbol_hash() if adding\r\n   * anything after 128\r\n   */\n\n  /** mask for base symbol type.\r\n   * @deprecated in 0.11, remove this from existing code\r\n   */\n  ScannerQRCode_SYMBOL: 255,\n\n  /** 2-digit add-on flag.\r\n   * @deprecated in 0.11, a ::ScannerQRCode_EAN2 component is used for\r\n   * 2-digit GS1 add-ons\r\n   */\n  ScannerQRCode_ADDON2: 512,\n\n  /** 5-digit add-on flag.\r\n   * @deprecated in 0.11, a ::ScannerQRCode_EAN5 component is used for\r\n   * 5-digit GS1 add-ons\r\n   */\n  ScannerQRCode_ADDON5: 1280,\n\n  /** add-on flag mask.\r\n   * @deprecated in 0.11, GS1 add-ons are represented using composite\r\n   * symbols of type ::ScannerQRCode_COMPOSITE; add-on components use ::ScannerQRCode_EAN2\r\n   * or ::ScannerQRCode_EAN5\r\n   */\n  ScannerQRCode_ADDON: 1792\n};\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_NONE] = 'ScannerQRCode_NONE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PARTIAL] = 'ScannerQRCode_PARTIAL';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN2] = 'ScannerQRCode_EAN2';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN5] = 'ScannerQRCode_EAN5';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN8] = 'ScannerQRCode_EAN8';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCE] = 'ScannerQRCode_UPCE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN10] = 'ScannerQRCode_ISBN10';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCA] = 'ScannerQRCode_UPCA';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN13] = 'ScannerQRCode_EAN13';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN13] = 'ScannerQRCode_ISBN13';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_COMPOSITE] = 'ScannerQRCode_COMPOSITE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_I25] = 'ScannerQRCode_I25';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR] = 'ScannerQRCode_DATABAR';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR_EXP] = 'ScannerQRCode_DATABAR_EXP';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODABAR] = 'ScannerQRCode_CODABAR';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE39] = 'ScannerQRCode_CODE39';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PDF417] = 'ScannerQRCode_PDF417';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_QRCODE] = 'ScannerQRCode_QRCODE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SQCODE] = 'ScannerQRCode_SQCODE';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE93] = 'ScannerQRCode_CODE93';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE128] = 'ScannerQRCode_CODE128';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SYMBOL] = 'ScannerQRCode_SYMBOL';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON2] = 'ScannerQRCode_ADDON2';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON5] = 'ScannerQRCode_ADDON5';\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON] = 'ScannerQRCode_ADDON';\n/** @enum {number} */\n\nconst ScannerQRCodeConfigType = {\n  ScannerQRCode_CFG_ENABLE: 0,\n  ScannerQRCode_CFG_ADD_CHECK: 1,\n  ScannerQRCode_CFG_EMIT_CHECK: 2,\n  ScannerQRCode_CFG_ASCII: 3,\n  ScannerQRCode_CFG_BINARY: 4,\n  ScannerQRCode_CFG_NUM: 5,\n  ScannerQRCode_CFG_MIN_LEN: 32,\n  ScannerQRCode_CFG_MAX_LEN: 33,\n  ScannerQRCode_CFG_UNCERTAINTY: 64,\n  ScannerQRCode_CFG_POSITION: 128,\n  ScannerQRCode_CFG_TEST_INVERTED: 129,\n  ScannerQRCode_CFG_X_DENSITY: 256,\n  ScannerQRCode_CFG_Y_DENSITY: 257\n};\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ENABLE] = 'ScannerQRCode_CFG_ENABLE';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ADD_CHECK] = 'ScannerQRCode_CFG_ADD_CHECK';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_EMIT_CHECK] = 'ScannerQRCode_CFG_EMIT_CHECK';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ASCII] = 'ScannerQRCode_CFG_ASCII';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_BINARY] = 'ScannerQRCode_CFG_BINARY';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_NUM] = 'ScannerQRCode_CFG_NUM';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MIN_LEN] = 'ScannerQRCode_CFG_MIN_LEN';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MAX_LEN] = 'ScannerQRCode_CFG_MAX_LEN';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_UNCERTAINTY] = 'ScannerQRCode_CFG_UNCERTAINTY';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_POSITION] = 'ScannerQRCode_CFG_POSITION';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_TEST_INVERTED] = 'ScannerQRCode_CFG_TEST_INVERTED';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_X_DENSITY] = 'ScannerQRCode_CFG_X_DENSITY';\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_Y_DENSITY] = 'ScannerQRCode_CFG_Y_DENSITY';\n/** @enum {number} */\n\nconst ScannerQRCodeOrientation = {\n  ScannerQRCode_ORIENT_UNKNOWN: -1,\n  ScannerQRCode_ORIENT_UP: 0,\n  ScannerQRCode_ORIENT_RIGHT: 1,\n  ScannerQRCode_ORIENT_DOWN: 2,\n  ScannerQRCode_ORIENT_LEFT: 3\n};\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UNKNOWN] = 'ScannerQRCode_ORIENT_UNKNOWN';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UP] = 'ScannerQRCode_ORIENT_UP';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_RIGHT] = 'ScannerQRCode_ORIENT_RIGHT';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_DOWN] = 'ScannerQRCode_ORIENT_DOWN';\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_LEFT] = 'ScannerQRCode_ORIENT_LEFT';\n\nclass ScannerQRCodeTypePointer {\n  /**\r\n   * @param {?} ptr\r\n   * @param {?} buf\r\n   */\n  constructor(ptr, buf) {\n    this.ptr = ptr;\n    this.ptr32 = ptr >> 2;\n    this.buf = buf;\n    this.HEAP8 = new Int8Array(buf);\n    this.HEAPU32 = new Uint32Array(buf);\n    this.HEAP32 = new Int32Array(buf);\n  }\n\n}\n\nclass ScannerQRCodeSymbolPtr extends ScannerQRCodeTypePointer {\n  /**\r\n   * @return {?}\r\n   */\n  get type() {\n    return (\n      /** @type {?} */\n      this.HEAPU32[this.ptr32]\n    );\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  get data() {\n    /** @type {?} */\n    const len = this.HEAPU32[this.ptr32 + 4];\n    /** @type {?} */\n\n    const ptr = this.HEAPU32[this.ptr32 + 5];\n    return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len));\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  get points() {\n    /** @type {?} */\n    const len = this.HEAPU32[this.ptr32 + 7];\n    /** @type {?} */\n\n    const ptr = this.HEAPU32[this.ptr32 + 8];\n    /** @type {?} */\n\n    const ptr32 = ptr >> 2;\n    /** @type {?} */\n\n    const res = [];\n\n    for (let i = 0; i < len; ++i) {\n      /** @type {?} */\n      const x = this.HEAP32[ptr32 + i * 2];\n      /** @type {?} */\n\n      const y = this.HEAP32[ptr32 + i * 2 + 1];\n      res.push(\n      /** @type {?} */\n      {\n        x,\n        y\n      });\n    }\n\n    return res;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  get orientation() {\n    return this.HEAP32[this.ptr32 + 9];\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  get next() {\n    /** @type {?} */\n    const ptr = this.HEAPU32[this.ptr32 + 11];\n    if (!ptr) return null;\n    return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  get time() {\n    return this.HEAPU32[this.ptr32 + 13];\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  get cacheCount() {\n    return this.HEAP32[this.ptr32 + 14];\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  get quality() {\n    return this.HEAP32[this.ptr32 + 15];\n  }\n\n}\n\nclass SymbolSetPtr extends ScannerQRCodeTypePointer {\n  /**\r\n   * @return {?}\r\n   */\n  get head() {\n    /** @type {?} */\n    const ptr = this.HEAPU32[this.ptr32 + 2];\n    if (!ptr) return null;\n    return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n  }\n\n}\n\nclass ScannerQRCodeResult {\n  /**\r\n   * @private\r\n   * @param {?} ptr\r\n   */\n  constructor(ptr) {\n    this.value = '';\n    this.type = ptr.type;\n    this.typeName = ScannerQRCodeSymbolType[this.type];\n    this.data = ptr.data;\n    this.points = ptr.points;\n    this.orientation = ptr.orientation;\n    this.time = ptr.time;\n    this.cacheCount = ptr.cacheCount;\n    this.quality = ptr.quality;\n  }\n  /**\r\n   * @param {?} ptr\r\n   * @param {?} buf\r\n   * @return {?}\r\n   */\n\n\n  static createSymbolsFromPtr(ptr, buf) {\n    if (ptr == 0) return [];\n    /** @type {?} */\n\n    const set = new SymbolSetPtr(ptr, buf);\n    /** @type {?} */\n\n    let symbol = set.head;\n    /** @type {?} */\n\n    const res = [];\n\n    while (symbol !== null) {\n      res.push(new ScannerQRCodeResult(symbol));\n      symbol = symbol.next;\n    }\n\n    return res;\n  }\n  /**\r\n   * @param {?=} encoding\r\n   * @return {?}\r\n   */\n\n\n  decode(encoding) {\n    /** @type {?} */\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(this.data);\n  }\n\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nclass NgxScannerQrcodeModule {}\n\nNgxScannerQrcodeModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [NgxScannerQrcodeComponent],\n    exports: [NgxScannerQrcodeComponent],\n    providers: [NgxScannerQrcodeService]\n  }]\n}];\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxScannerQrcodeService, NgxScannerQrcodeComponent, ScannerQRCodeSymbolType, ScannerQRCodeConfigType, ScannerQRCodeOrientation, ScannerQRCodeResult, NgxScannerQrcodeModule };","map":{"version":3,"names":["__awaiter","AsyncSubject","BehaviorSubject","Injectable","NgModule","defineInjectable","EventEmitter","Component","ViewChild","ViewEncapsulation","MEDIA_STREAM_DEFAULT","audio","video","CONFIG_DEFAULT","src","fps","vibrate","decode","isBeep","deviceActive","constraints","OVERRIDES","variableKey","config","defaultConfig","Object","keys","length","key","cloneDeep","JSON","parse","stringify","assign","hasOwnProperty","AS_COMPLETE","as","data","error","next","complete","PLAY_AUDIO","isPlay","Audio","Array","join","oncanplaythrough","promise","play","catch","e","name","HAS_OWN_PROPERTY","obj","propertyPath","properties","split","i","prop","DRAW_RESULT_APPEND_CHILD","code","oriCanvas","elTarget","widthZoom","heightZoom","oriWidth","width","oriHeight","height","oriWHRatio","imgWidth","parseInt","getComputedStyle","imgHeight","imgWHRatio","innerHTML","_code","cvs","document","createElement","ctx","getContext","willReadFrequently","loc","X","Y","points","j","xj","x","yj","y","push","maxX","Math","max","minX","min","maxY","minY","setAttribute","style","top","left","lineWidth","strokeStyle","fillStyle","polygon","k","shape","slice","beginPath","moveTo","shift","lineTo","closePath","fill","stroke","qrcodeTooltipTemp","innerText","value","qrcodeTooltip","appendChild","fontSize","resultText","DRAW_RESULT_ON_CANVAS","font","FILL_TEXT_MULTI_LINE","READ_AS_DATA_URL","file","Promise","resolve","reject","fileReader","FileReader","onload","objectFile","url","URL","createObjectURL","image","Image","canvas","naturalWidth","naturalHeight","drawImage","imageData","getImageData","zbarWasm","scanImageData","forEach","s","toLocaleLowerCase","blob","CANVAS_TO_BLOB","blobToFile","theBlob","fileName","File","lastModified","Date","getTime","type","onerror","readAsDataURL","toBlob","BLOB_TO_FILE","FILES_TO_SCAN","files","configs","all","map","m","then","img","text","lineHeight","measureText","lines","fillText","strokeText","VIBRATE","time","IS_MOBILE","window","navigator","vendor","userAgent","test","substr","NgxScannerQrcodeService","loadFiles","loadFilesToScan","decorators","args","providedIn","ngInjectableDef","factory","NgxScannerQrcodeService_Factory","token","NgxScannerQrcodeComponent","constructor","event","isStart","isLoading","isTorch","devices","dataForResize","ngOnInit","overrideConfig","loadImage","resize","start","loadAllDevices","playDevice","deviceId","existDeviceId","getConstraints","stop","clearInterval","rAF_ID","status","findIndex","f","mediaDevices","getUserMedia","stream","nativeElement","srcObject","onloadedmetadata","requestAnimationFrame","eventEmit","removeCanvas","getTracks","track","isPause","pause","flag","torcher","applyConstraints","torch","subscribe","videoTrack","getVideoTracks","imageCapture","ImageCapture","getPhotoCapabilities","advanced","download","now","run","res","item","link","href","click","remove","addEventListener","resultsPanel","enumerateDevices","cameraDevices","kind","index","element","callback","HTMLImageElement","visibility","offsetHeight","HTMLVideoElement","videoWidth","videoHeight","clearRect","freeze","EMIT_DATA","childNodes","el","removeChild","response","emit","setInterval","readyState","HAVE_ENOUGH_DATA","paused","ngOnDestroy","selector","template","host","exportAs","inputs","outputs","queries","encapsulation","None","styles","ScannerQRCodeSymbolType","ScannerQRCode_NONE","ScannerQRCode_PARTIAL","ScannerQRCode_EAN2","ScannerQRCode_EAN5","ScannerQRCode_EAN8","ScannerQRCode_UPCE","ScannerQRCode_ISBN10","ScannerQRCode_UPCA","ScannerQRCode_EAN13","ScannerQRCode_ISBN13","ScannerQRCode_COMPOSITE","ScannerQRCode_I25","ScannerQRCode_DATABAR","ScannerQRCode_DATABAR_EXP","ScannerQRCode_CODABAR","ScannerQRCode_CODE39","ScannerQRCode_PDF417","ScannerQRCode_QRCODE","ScannerQRCode_SQCODE","ScannerQRCode_CODE93","ScannerQRCode_CODE128","ScannerQRCode_SYMBOL","ScannerQRCode_ADDON2","ScannerQRCode_ADDON5","ScannerQRCode_ADDON","ScannerQRCodeConfigType","ScannerQRCode_CFG_ENABLE","ScannerQRCode_CFG_ADD_CHECK","ScannerQRCode_CFG_EMIT_CHECK","ScannerQRCode_CFG_ASCII","ScannerQRCode_CFG_BINARY","ScannerQRCode_CFG_NUM","ScannerQRCode_CFG_MIN_LEN","ScannerQRCode_CFG_MAX_LEN","ScannerQRCode_CFG_UNCERTAINTY","ScannerQRCode_CFG_POSITION","ScannerQRCode_CFG_TEST_INVERTED","ScannerQRCode_CFG_X_DENSITY","ScannerQRCode_CFG_Y_DENSITY","ScannerQRCodeOrientation","ScannerQRCode_ORIENT_UNKNOWN","ScannerQRCode_ORIENT_UP","ScannerQRCode_ORIENT_RIGHT","ScannerQRCode_ORIENT_DOWN","ScannerQRCode_ORIENT_LEFT","ScannerQRCodeTypePointer","ptr","buf","ptr32","HEAP8","Int8Array","HEAPU32","Uint32Array","HEAP32","Int32Array","ScannerQRCodeSymbolPtr","len","from","subarray","orientation","cacheCount","quality","SymbolSetPtr","head","ScannerQRCodeResult","typeName","createSymbolsFromPtr","set","symbol","encoding","decoder","TextDecoder","NgxScannerQrcodeModule","declarations","exports","providers"],"sources":["E:/GME/Angular/GME-Angular/node_modules/ngx-scanner-qrcode/fesm2015/ngx-scanner-qrcode.js"],"sourcesContent":["import { __awaiter } from 'tslib';\nimport { AsyncSubject, BehaviorSubject } from 'rxjs';\nimport { Injectable, NgModule, defineInjectable, EventEmitter, Component, ViewChild, ViewEncapsulation } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst MEDIA_STREAM_DEFAULT = {\r\n    audio: false,\r\n    video: true\r\n};\r\n/** @type {?} */\r\nconst CONFIG_DEFAULT = {\r\n    src: '',\r\n    fps: 30,\r\n    vibrate: 300,\r\n    decode: 'utf-8',\r\n    isBeep: true,\r\n    deviceActive: 0,\r\n    constraints: MEDIA_STREAM_DEFAULT,\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * OVERRIDES\r\n * \\@param variableKey\r\n * \\@param config\r\n * \\@param defaultConfig\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst OVERRIDES = (/**\r\n * @param {?} variableKey\r\n * @param {?} config\r\n * @param {?} defaultConfig\r\n * @return {?}\r\n */\r\n(variableKey, config, defaultConfig) => {\r\n    if (config && Object.keys(config[variableKey]).length) {\r\n        for (const key in defaultConfig) {\r\n            /** @type {?} */\r\n            const cloneDeep = JSON.parse(JSON.stringify(Object.assign({}, config[variableKey], { [key]: ((/** @type {?} */ (defaultConfig)))[key] })));\r\n            config[variableKey] = config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\r\n        }\r\n        return config[variableKey];\r\n    }\r\n    else {\r\n        return defaultConfig;\r\n    }\r\n});\r\n/**\r\n * Rxjs complete\r\n * \\@param as\r\n * \\@param data\r\n * \\@param error\r\n * @type {?}\r\n */\r\nconst AS_COMPLETE = (/**\r\n * @param {?} as\r\n * @param {?} data\r\n * @param {?=} error\r\n * @return {?}\r\n */\r\n(as, data, error = null) => {\r\n    error ? as.error(error) : as.next(data);\r\n    as.complete();\r\n});\r\n/**\r\n * CAMERA_BEEP\r\n * \\@param isPlay\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst PLAY_AUDIO = (/**\r\n * @param {?=} isPlay\r\n * @return {?}\r\n */\r\n(isPlay = false) => {\r\n    if (isPlay === false)\r\n        return;\r\n    /** @type {?} */\r\n    const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU' + Array(300).join('101'));\r\n    // when the sound has been loaded, execute your code\r\n    audio.oncanplaythrough = (/**\r\n     * @return {?}\r\n     */\r\n    () => {\r\n        /** @type {?} */\r\n        const promise = audio.play();\r\n        if (promise) {\r\n            promise.catch((/**\r\n             * @param {?} e\r\n             * @return {?}\r\n             */\r\n            (e) => {\r\n                if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") ;\r\n            }));\r\n        }\r\n    });\r\n});\r\n/**\r\n * HAS_OWN_PROPERTY\r\n * Fix issue vs ng v 6-7-8\r\n * Optional chaining (?.) just have on ng v 9++\r\n * eg: HAS_OWN_PROPERTY(config, 'frameOptions.style') // output: boolean\r\n * \\@param obj\r\n * \\@param propertyPath\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst HAS_OWN_PROPERTY = (/**\r\n * @param {?} obj\r\n * @param {?} propertyPath\r\n * @return {?}\r\n */\r\n(obj, propertyPath) => {\r\n    /** @type {?} */\r\n    const properties = propertyPath.split(\".\");\r\n    for (let i = 0; i < properties.length; i++) {\r\n        /** @type {?} */\r\n        let prop = properties[i];\r\n        if (!obj.hasOwnProperty(prop)) {\r\n            return false;\r\n        }\r\n        else {\r\n            obj = obj[prop];\r\n        }\r\n    }\r\n    return true;\r\n});\r\n/**\r\n * DRAW_RESULT_APPEND_CHILD\r\n * \\@param code\r\n * \\@param oriCanvas\r\n * \\@param elTarget\r\n * @type {?}\r\n */\r\nconst DRAW_RESULT_APPEND_CHILD = (/**\r\n * @param {?} code\r\n * @param {?} oriCanvas\r\n * @param {?} elTarget\r\n * @return {?}\r\n */\r\n(code, oriCanvas, elTarget) => {\r\n    /** @type {?} */\r\n    let widthZoom;\r\n    /** @type {?} */\r\n    let heightZoom;\r\n    /** @type {?} */\r\n    let oriWidth = oriCanvas.width;\r\n    /** @type {?} */\r\n    let oriHeight = oriCanvas.height;\r\n    /** @type {?} */\r\n    let oriWHRatio = oriWidth / oriHeight;\r\n    /** @type {?} */\r\n    let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\r\n    /** @type {?} */\r\n    let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\r\n    /** @type {?} */\r\n    let imgWHRatio = imgWidth / imgHeight;\r\n    elTarget.innerHTML = '';\r\n    if (oriWHRatio > imgWHRatio) {\r\n        widthZoom = imgWidth / oriWidth;\r\n        heightZoom = imgWidth / oriWHRatio / oriHeight;\r\n    }\r\n    else {\r\n        heightZoom = imgHeight / oriHeight;\r\n        widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n    }\r\n    for (let i = 0; i < code.length; i++) {\r\n        /** @type {?} */\r\n        const _code = code[i];\r\n        // New canvas\r\n        /** @type {?} */\r\n        let cvs = document.createElement(\"canvas\");\r\n        /** @type {?} */\r\n        let ctx = (/** @type {?} */ (cvs.getContext('2d', { willReadFrequently: true })));\r\n        /** @type {?} */\r\n        let loc = {};\r\n        /** @type {?} */\r\n        let X = [];\r\n        /** @type {?} */\r\n        let Y = [];\r\n        // Point x,y\r\n        /** @type {?} */\r\n        const points = _code.points;\r\n        for (let j = 0; j < points.length; j++) {\r\n            /** @type {?} */\r\n            const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\r\n            /** @type {?} */\r\n            const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\r\n            loc[`x${j + 1}`] = xj;\r\n            loc[`y${j + 1}`] = yj;\r\n            X.push(xj);\r\n            Y.push(yj);\r\n        }\r\n        // Min max\r\n        /** @type {?} */\r\n        let maxX = Math.max(...X);\r\n        /** @type {?} */\r\n        let minX = Math.min(...X);\r\n        /** @type {?} */\r\n        let maxY = Math.max(...Y);\r\n        /** @type {?} */\r\n        let minY = Math.min(...Y);\r\n        // Add class\r\n        cvs.setAttribute('class', 'qrcode-polygon');\r\n        // Size with screen zoom\r\n        if (oriWHRatio > imgWHRatio) {\r\n            cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\r\n            cvs.style.left = minX * widthZoom + \"px\";\r\n            cvs.width = (maxX - minX) * widthZoom;\r\n            cvs.height = (maxY - minY) * widthZoom;\r\n        }\r\n        else {\r\n            cvs.style.top = minY * heightZoom + \"px\";\r\n            cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n            cvs.width = (maxX - minX) * heightZoom;\r\n            cvs.height = (maxY - minY) * heightZoom;\r\n        }\r\n        // Style for canvas\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = 'green';\r\n        ctx.fillStyle = \"#55f02880\";\r\n        // polygon [x,y, x,y, x,y.....];\r\n        /** @type {?} */\r\n        const polygon = [];\r\n        for (let k = 0; k < X.length; k++) {\r\n            polygon.push((loc[`x${k + 1}`] - minX) * heightZoom);\r\n            polygon.push((loc[`y${k + 1}`] - minY) * widthZoom);\r\n        }\r\n        // Copy array\r\n        /** @type {?} */\r\n        const shape = (/** @type {?} */ (polygon.slice(0)));\r\n        // Draw polygon\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.shift(), shape.shift());\r\n        while (shape.length) {\r\n            ctx.lineTo(shape.shift(), shape.shift()); //x,y\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // Tooltip result\r\n        /** @type {?} */\r\n        const qrcodeTooltipTemp = document.createElement('div');\r\n        qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\r\n        qrcodeTooltipTemp.innerText = _code.value;\r\n        // Tooltip box\r\n        /** @type {?} */\r\n        const qrcodeTooltip = document.createElement('div');\r\n        qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\r\n        qrcodeTooltip.appendChild(qrcodeTooltipTemp);\r\n        heightZoom = imgHeight / oriHeight;\r\n        widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n        qrcodeTooltip.style.fontSize = widthZoom * 15 + 'px';\r\n        qrcodeTooltip.style.top = minY * heightZoom + \"px\";\r\n        qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n        qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\r\n        qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\";\r\n        // Result text\r\n        /** @type {?} */\r\n        const resultText = document.createElement('span');\r\n        resultText.innerText = _code.value;\r\n        resultText.style.fontSize = widthZoom * 13 + 'px';\r\n        // Set position result text\r\n        resultText.style.top = minY * heightZoom + (-20 * heightZoom) + \"px\";\r\n        resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n        if (elTarget) {\r\n            elTarget.appendChild(qrcodeTooltip);\r\n            elTarget.appendChild(resultText);\r\n            elTarget.appendChild(cvs);\r\n        }\r\n    }\r\n})\r\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * @param code\r\n * @param cvs\r\n */\r\n;\r\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * \\@param code\r\n * \\@param cvs\r\n * @type {?}\r\n */\r\nconst DRAW_RESULT_ON_CANVAS = (/**\r\n * @param {?} code\r\n * @param {?} cvs\r\n * @return {?}\r\n */\r\n(code, cvs) => {\r\n    /** @type {?} */\r\n    let ctx = (/** @type {?} */ (cvs.getContext('2d', { willReadFrequently: true })));\r\n    for (let i = 0; i < code.length; i++) {\r\n        /** @type {?} */\r\n        const _code = code[i];\r\n        /** @type {?} */\r\n        let loc = {};\r\n        /** @type {?} */\r\n        let X = [];\r\n        /** @type {?} */\r\n        let Y = [];\r\n        // Point x,y\r\n        /** @type {?} */\r\n        const points = _code.points;\r\n        for (let j = 0; j < points.length; j++) {\r\n            /** @type {?} */\r\n            const xj = HAS_OWN_PROPERTY(points, `${j}.x`) ? points[j].x : 0;\r\n            /** @type {?} */\r\n            const yj = HAS_OWN_PROPERTY(points, `${j}.y`) ? points[j].y : 0;\r\n            loc[`x${j + 1}`] = xj;\r\n            loc[`y${j + 1}`] = yj;\r\n            X.push(xj);\r\n            Y.push(yj);\r\n        }\r\n        // Min max\r\n        /** @type {?} */\r\n        let minX = Math.min(...X);\r\n        /** @type {?} */\r\n        let minY = Math.min(...Y);\r\n        // Style for canvas\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = 'green';\r\n        ctx.fillStyle = \"#55f02880\";\r\n        ctx.font = \"15px serif\";\r\n        FILL_TEXT_MULTI_LINE(ctx, _code.value, minX, minY - 5);\r\n        // polygon [x,y, x,y, x,y.....];\r\n        /** @type {?} */\r\n        const polygon = [];\r\n        for (let k = 0; k < X.length; k++) {\r\n            polygon.push(loc[`x${k + 1}`]);\r\n            polygon.push(loc[`y${k + 1}`]);\r\n        }\r\n        // Copy array\r\n        /** @type {?} */\r\n        const shape = (/** @type {?} */ (polygon.slice(0)));\r\n        // Draw polygon\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.shift(), shape.shift());\r\n        while (shape.length) {\r\n            ctx.lineTo(shape.shift(), shape.shift()); //x,y\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    }\r\n})\r\n/**\r\n * READ_AS_DATA_URL\r\n * @param file\r\n * @param config\r\n * @return Promise\r\n */\r\n;\r\n/**\r\n * READ_AS_DATA_URL\r\n * \\@param file\r\n * \\@param config\r\n * \\@return Promise\r\n * @type {?}\r\n */\r\nconst READ_AS_DATA_URL = (/**\r\n * @param {?} file\r\n * @param {?} config\r\n * @return {?}\r\n */\r\n(file, config) => {\r\n    /**\r\n     * overrides *\r\n     * @type {?}\r\n     */\r\n    let decode = HAS_OWN_PROPERTY(config, 'decode') ? config.decode : CONFIG_DEFAULT.decode;\r\n    /** drawImage **/\r\n    return new Promise((/**\r\n     * @param {?} resolve\r\n     * @param {?} reject\r\n     * @return {?}\r\n     */\r\n    (resolve, reject) => {\r\n        /** @type {?} */\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            /** @type {?} */\r\n            const objectFile = {\r\n                name: file.name,\r\n                file: file,\r\n                url: URL.createObjectURL(file)\r\n            };\r\n            // Set the src of this Image object.\r\n            /** @type {?} */\r\n            const image = new Image();\r\n            // Setting cross origin value to anonymous\r\n            image.setAttribute('crossOrigin', 'anonymous');\r\n            // When our image has loaded.\r\n            image.onload = (/**\r\n             * @return {?}\r\n             */\r\n            () => __awaiter(this, void 0, void 0, function* () {\r\n                // Get the canvas element by using the getElementById method.\r\n                /** @type {?} */\r\n                const canvas = document.createElement('canvas');\r\n                // HTMLImageElement size\r\n                canvas.width = image.naturalWidth || image.width;\r\n                canvas.height = image.naturalHeight || image.height;\r\n                // Get a 2D drawing context for the canvas.\r\n                /** @type {?} */\r\n                const ctx = (/** @type {?} */ (canvas.getContext('2d')));\r\n                // Draw image\r\n                ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                // Data image\r\n                /** @type {?} */\r\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                // Scanner\r\n                /** @type {?} */\r\n                const code = yield zbarWasm.scanImageData(imageData);\r\n                if (code && code.length) {\r\n                    // Decode\r\n                    code.forEach((/**\r\n                     * @param {?} s\r\n                     * @return {?}\r\n                     */\r\n                    (s) => s.value = s.decode(decode && decode.toLocaleLowerCase())));\r\n                    // Overlay\r\n                    DRAW_RESULT_ON_CANVAS(code, canvas);\r\n                    // Emit object\r\n                    /** @type {?} */\r\n                    const blob = yield CANVAS_TO_BLOB(canvas);\r\n                    /** @type {?} */\r\n                    const url = URL.createObjectURL(blob);\r\n                    /** @type {?} */\r\n                    const blobToFile = (/**\r\n                     * @param {?} theBlob\r\n                     * @param {?} fileName\r\n                     * @return {?}\r\n                     */\r\n                    (theBlob, fileName) => new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type }));\r\n                    resolve(Object.assign({}, objectFile, { data: code, url: url, canvas: canvas, file: blobToFile(blob, objectFile.name) }));\r\n                }\r\n                else {\r\n                    resolve(Object.assign({}, objectFile, { data: code, canvas: canvas }));\r\n                }\r\n            }));\r\n            // Set src\r\n            image.src = objectFile.url;\r\n        });\r\n        fileReader.onerror = (/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        (error) => reject(error));\r\n        fileReader.readAsDataURL(file);\r\n    }));\r\n})\r\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * @param canvas\r\n * @param type\r\n * @return Promise\r\n */\r\n;\r\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * \\@param canvas\r\n * \\@param type\r\n * \\@return Promise\r\n * @type {?}\r\n */\r\nconst CANVAS_TO_BLOB = (/**\r\n * @param {?} canvas\r\n * @param {?=} type\r\n * @return {?}\r\n */\r\n(canvas, type) => {\r\n    return new Promise((/**\r\n     * @param {?} resolve\r\n     * @param {?} reject\r\n     * @return {?}\r\n     */\r\n    (resolve, reject) => canvas.toBlob((/**\r\n     * @param {?} blob\r\n     * @return {?}\r\n     */\r\n    blob => resolve(blob)), type)));\r\n})\r\n/**\r\n * Convert blob to file\r\n * @param theBlob\r\n * @param fileName\r\n * @return File\r\n */\r\n;\r\n/**\r\n * Convert blob to file\r\n * \\@param theBlob\r\n * \\@param fileName\r\n * \\@return File\r\n * @type {?}\r\n */\r\nconst BLOB_TO_FILE = (/**\r\n * @param {?} theBlob\r\n * @param {?} fileName\r\n * @return {?}\r\n */\r\n(theBlob, fileName) => {\r\n    return new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type });\r\n})\r\n/**\r\n * FILES_TO_SCAN\r\n * @param files\r\n * @return AsyncSubject\r\n */\r\n;\r\n/**\r\n * FILES_TO_SCAN\r\n * \\@param files\r\n * \\@return AsyncSubject\r\n * @type {?}\r\n */\r\nconst FILES_TO_SCAN = (/**\r\n * @param {?=} files\r\n * @param {?=} configs\r\n * @param {?=} as\r\n * @return {?}\r\n */\r\n(files = [], configs, as = new AsyncSubject()) => {\r\n    Promise.all(Object.assign([], files).map((/**\r\n     * @param {?} m\r\n     * @return {?}\r\n     */\r\n    m => READ_AS_DATA_URL(m, configs)))).then((/**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\r\n    (img) => AS_COMPLETE(as, img))).catch((/**\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    (error) => AS_COMPLETE(as, null, error)));\r\n    return as;\r\n})\r\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * @param ctx\r\n * @param text\r\n * @param x\r\n * @param y\r\n */\r\n;\r\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * \\@param ctx\r\n * \\@param text\r\n * \\@param x\r\n * \\@param y\r\n * @type {?}\r\n */\r\nconst FILL_TEXT_MULTI_LINE = (/**\r\n * @param {?} ctx\r\n * @param {?} text\r\n * @param {?} x\r\n * @param {?} y\r\n * @return {?}\r\n */\r\n(ctx, text, x, y) => {\r\n    /** @type {?} */\r\n    let lineHeight = ctx.measureText(\"M\").width * 1.2;\r\n    /** @type {?} */\r\n    let lines = text.split(\"\\n\");\r\n    for (var i = 0; i < lines.length; ++i) {\r\n        ctx.fillText(lines[i], x, y);\r\n        ctx.strokeText(lines[i], x, y);\r\n        y += lineHeight;\r\n    }\r\n})\r\n/**\r\n * VIBRATE\r\n * Bật rung trên mobile\r\n * @param time\r\n */\r\n;\r\n/**\r\n * VIBRATE\r\n * Bật rung trên mobile\r\n * \\@param time\r\n * @type {?}\r\n */\r\nconst VIBRATE = (/**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    time && IS_MOBILE() && window.navigator.vibrate(time);\r\n});\r\n/**\r\n * IS_MOBILE\r\n * \\@return\r\n * @type {?}\r\n */\r\nconst IS_MOBILE = (/**\r\n * @return {?}\r\n */\r\n() => {\r\n    /** @type {?} */\r\n    const vendor = navigator.userAgent || navigator['vendor'] || window['opera'];\r\n    return !!(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(vendor) ||\r\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(vendor.substr(0, 4)));\r\n});\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxScannerQrcodeService {\r\n    /**\r\n     * Load files\r\n     * @param {?=} files\r\n     * @return {?} AsyncSubject\r\n     */\r\n    loadFiles(files = []) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        Promise.all(Object.assign([], files).map((/**\r\n         * @param {?} m\r\n         * @return {?}\r\n         */\r\n        m => this.readAsDataURL(m)))).then((/**\r\n         * @param {?} img\r\n         * @return {?}\r\n         */\r\n        (img) => AS_COMPLETE(as, img))).catch((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        (error) => AS_COMPLETE(as, null, error)));\r\n        return as;\r\n    }\r\n    /**\r\n     * loadFilesToScan\r\n     * @param {?=} files\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    loadFilesToScan(files = [], config) {\r\n        return FILES_TO_SCAN(files, config);\r\n    }\r\n    /**\r\n     * readAsDataURL\r\n     * @private\r\n     * @param {?} file\r\n     * @return {?} Promise\r\n     */\r\n    readAsDataURL(file) {\r\n        /** drawImage **/\r\n        return new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        (resolve, reject) => {\r\n            /** @type {?} */\r\n            const fileReader = new FileReader();\r\n            fileReader.onload = (/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                /** @type {?} */\r\n                const objectFile = {\r\n                    name: file.name,\r\n                    file: file,\r\n                    url: URL.createObjectURL(file)\r\n                };\r\n                resolve(objectFile);\r\n            });\r\n            fileReader.onerror = (/**\r\n             * @param {?} error\r\n             * @return {?}\r\n             */\r\n            (error) => reject(error));\r\n            fileReader.readAsDataURL(file);\r\n        }));\r\n    }\r\n}\r\nNgxScannerQrcodeService.decorators = [\r\n    { type: Injectable, args: [{\r\n                providedIn: 'root'\r\n            },] }\r\n];\r\n/** @nocollapse */ NgxScannerQrcodeService.ngInjectableDef = defineInjectable({ factory: function NgxScannerQrcodeService_Factory() { return new NgxScannerQrcodeService(); }, token: NgxScannerQrcodeService, providedIn: \"root\" });\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxScannerQrcodeComponent {\r\n    constructor() {\r\n        /**\r\n         * EventEmitter\r\n         */\r\n        this.event = new EventEmitter();\r\n        /**\r\n         * Input\r\n         */\r\n        this.src = CONFIG_DEFAULT.src;\r\n        this.fps = CONFIG_DEFAULT.fps;\r\n        this.vibrate = CONFIG_DEFAULT.vibrate;\r\n        this.decode = CONFIG_DEFAULT.decode;\r\n        this.isBeep = CONFIG_DEFAULT.isBeep;\r\n        this.deviceActive = CONFIG_DEFAULT.deviceActive;\r\n        this.config = CONFIG_DEFAULT;\r\n        this.constraints = CONFIG_DEFAULT.constraints;\r\n        /**\r\n         * Export\r\n         */\r\n        this.isStart = false;\r\n        this.isLoading = false;\r\n        this.isTorch = false;\r\n        this.data = new BehaviorSubject([]);\r\n        this.devices = new BehaviorSubject([]);\r\n        this.dataForResize = [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.overrideConfig();\r\n        if (this.src) {\r\n            this.loadImage(this.src);\r\n        }\r\n        this.resize();\r\n    }\r\n    /**\r\n     * start\r\n     * @return {?} AsyncSubject\r\n     */\r\n    start() {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        if (this.isStart) {\r\n            // Reject\r\n            AS_COMPLETE(as, false);\r\n        }\r\n        else {\r\n            // mediaDevices\r\n            this.loadAllDevices(as);\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * playDevice\r\n     * @param {?} deviceId\r\n     * @param {?=} as\r\n     * @return {?} AsyncSubject\r\n     */\r\n    playDevice(deviceId, as = new AsyncSubject()) {\r\n        /** @type {?} */\r\n        const existDeviceId = this.isStart ? this.getConstraints().deviceId != deviceId : true;\r\n        switch (true) {\r\n            case deviceId == 'null' || deviceId == null:\r\n                this.stop();\r\n                AS_COMPLETE(as, false);\r\n                break;\r\n            case deviceId && existDeviceId:\r\n                stop();\r\n                this.stop();\r\n                clearInterval(this.rAF_ID);\r\n                // Loading on\r\n                this.status(false, true);\r\n                /** @type {?} */\r\n                const constraints = {\r\n                    audio: false,\r\n                    video: (typeof (this.constraints && this.constraints.video) === 'boolean') ? { deviceId: deviceId } : Object.assign({ deviceId: deviceId }, this.constraints && this.constraints.video)\r\n                };\r\n                this.deviceActive = this.devices.value.findIndex((/**\r\n                 * @param {?} f\r\n                 * @return {?}\r\n                 */\r\n                f => f.deviceId == deviceId));\r\n                // MediaStream\r\n                navigator.mediaDevices.getUserMedia(constraints).then((/**\r\n                 * @param {?} stream\r\n                 * @return {?}\r\n                 */\r\n                (stream) => {\r\n                    this.video.nativeElement.srcObject = stream;\r\n                    this.video.nativeElement.onloadedmetadata = (/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        this.video.nativeElement.play();\r\n                        this.requestAnimationFrame();\r\n                        this.status(true, false);\r\n                        AS_COMPLETE(as, true);\r\n                    });\r\n                })).catch((/**\r\n                 * @param {?} error\r\n                 * @return {?}\r\n                 */\r\n                error => {\r\n                    this.status(false, false);\r\n                    this.eventEmit(false);\r\n                    AS_COMPLETE(as, false, error);\r\n                }));\r\n                break;\r\n            default:\r\n                AS_COMPLETE(as, false);\r\n                break;\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * stop\r\n     * @return {?} AsyncSubject\r\n     */\r\n    stop() {\r\n        this.eventEmit(null);\r\n        this.status(false, false);\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        try {\r\n            this.removeCanvas();\r\n            clearInterval(this.rAF_ID);\r\n            ((/** @type {?} */ (this.video.nativeElement.srcObject))).getTracks().forEach((/**\r\n             * @param {?} track\r\n             * @return {?}\r\n             */\r\n            (track) => {\r\n                track.stop();\r\n                AS_COMPLETE(as, true);\r\n            }));\r\n        }\r\n        catch (error) {\r\n            AS_COMPLETE(as, false, (/** @type {?} */ (error)));\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * play\r\n     * @return {?} AsyncSubject\r\n     */\r\n    play() {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        if (this.isPause) {\r\n            this.video.nativeElement.play();\r\n            this.requestAnimationFrame();\r\n            AS_COMPLETE(as, true);\r\n        }\r\n        else {\r\n            AS_COMPLETE(as, false);\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * pause\r\n     * @return {?} AsyncSubject\r\n     */\r\n    pause() {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        if (this.isStart) {\r\n            clearInterval(this.rAF_ID);\r\n            this.video.nativeElement.pause();\r\n            AS_COMPLETE(as, true);\r\n        }\r\n        else {\r\n            AS_COMPLETE(as, false);\r\n        }\r\n        return as;\r\n    }\r\n    /**\r\n     * loadImage\r\n     * @param {?} src\r\n     * @return {?} AsyncSubject\r\n     */\r\n    loadImage(src) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        // Loading on\r\n        this.status(false, true);\r\n        // Set the src of this Image object.\r\n        /** @type {?} */\r\n        const image = new Image();\r\n        // Setting cross origin value to anonymous\r\n        image.setAttribute('crossOrigin', 'anonymous');\r\n        // When our image has loaded.\r\n        image.onload = (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.drawImage(image, (/**\r\n             * @param {?} flag\r\n             * @return {?}\r\n             */\r\n            (flag) => {\r\n                this.status(false, false);\r\n                AS_COMPLETE(as, flag);\r\n            }));\r\n        });\r\n        // Set src\r\n        image.src = src;\r\n        return as;\r\n    }\r\n    /**\r\n     * torcher\r\n     * @return {?} AsyncSubject\r\n     */\r\n    torcher() {\r\n        /** @type {?} */\r\n        const as = this.applyConstraints({ torch: this.isTorch });\r\n        as.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        () => false), (/**\r\n         * @return {?}\r\n         */\r\n        () => this.isTorch = !this.isTorch));\r\n        return as;\r\n    }\r\n    /**\r\n     * applyConstraints\r\n     * @param {?} constraints\r\n     * @return {?} AsyncSubject\r\n     */\r\n    applyConstraints(constraints) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        /** @type {?} */\r\n        const stream = (/** @type {?} */ (this.video.nativeElement.srcObject));\r\n        /** @type {?} */\r\n        const videoTrack = (/** @type {?} */ (stream.getVideoTracks()[0]));\r\n        /** @type {?} */\r\n        const imageCapture = new ((/** @type {?} */ (window))).ImageCapture(videoTrack);\r\n        imageCapture.getPhotoCapabilities().then((/**\r\n         * @return {?}\r\n         */\r\n        () => __awaiter(this, void 0, void 0, function* () {\r\n            yield videoTrack.applyConstraints((/** @type {?} */ ({ advanced: [constraints] })));\r\n            AS_COMPLETE(as, true);\r\n        }))).catch((/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        (error) => {\r\n            switch (error && error.name) {\r\n                case 'NotFoundError':\r\n                case 'DevicesNotFoundError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Required track is missing')));\r\n                    break;\r\n                case 'NotReadableError':\r\n                case 'TrackStartError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Webcam or mic are already in use')));\r\n                    break;\r\n                case 'OverconstrainedError':\r\n                case 'ConstraintNotSatisfiedError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Constraints can not be satisfied by avb. devices')));\r\n                    break;\r\n                case 'NotAllowedError':\r\n                case 'PermissionDeniedError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Permission denied in browser')));\r\n                    break;\r\n                case 'TypeError':\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ ('Empty constraints object')));\r\n                    break;\r\n                default:\r\n                    AS_COMPLETE(as, false, (/** @type {?} */ (error)));\r\n                    break;\r\n            }\r\n        }));\r\n        return as;\r\n    }\r\n    ;\r\n    /**\r\n     * getConstraints\r\n     * @return {?}\r\n     */\r\n    getConstraints() {\r\n        /** @type {?} */\r\n        const stream = (/** @type {?} */ (this.video.nativeElement.srcObject));\r\n        /** @type {?} */\r\n        const videoTrack = stream && (/** @type {?} */ (stream.getVideoTracks()[0]));\r\n        return videoTrack && (/** @type {?} */ (videoTrack.getConstraints()));\r\n    }\r\n    /**\r\n     * download\r\n     * @param {?=} fileName\r\n     * @return {?} AsyncSubject\r\n     */\r\n    download(fileName = `ngx-scanner-qrcode-${Date.now()}.png`) {\r\n        /** @type {?} */\r\n        const as = new AsyncSubject();\r\n        /** @type {?} */\r\n        const run = (/**\r\n         * @return {?}\r\n         */\r\n        () => __awaiter(this, void 0, void 0, function* () {\r\n            /** @type {?} */\r\n            const blob = yield CANVAS_TO_BLOB(this.canvas.nativeElement);\r\n            /** @type {?} */\r\n            const file = BLOB_TO_FILE(blob, fileName);\r\n            FILES_TO_SCAN([file], this.config, as).subscribe((/**\r\n             * @param {?} res\r\n             * @return {?}\r\n             */\r\n            (res) => {\r\n                res.forEach((/**\r\n                 * @param {?} item\r\n                 * @return {?}\r\n                 */\r\n                (item) => {\r\n                    /** @type {?} */\r\n                    const link = document.createElement('a');\r\n                    link.href = item.url;\r\n                    link.download = item.name;\r\n                    link.click();\r\n                    link.remove();\r\n                }));\r\n            }));\r\n        }));\r\n        run();\r\n        return as;\r\n    }\r\n    /**\r\n     * window: resize\r\n     * Draw again!\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    resize() {\r\n        window.addEventListener(\"resize\", (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (this.dataForResize && this.dataForResize.length) {\r\n                DRAW_RESULT_APPEND_CHILD((/** @type {?} */ (this.dataForResize)), this.canvas.nativeElement, this.resultsPanel.nativeElement);\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * Override config\r\n     * @private\r\n     * @return {?} void\r\n     */\r\n    overrideConfig() {\r\n        if (HAS_OWN_PROPERTY(this.config, 'src'))\r\n            this.src = this.config.src;\r\n        if (HAS_OWN_PROPERTY(this.config, 'fps'))\r\n            this.fps = this.config.fps;\r\n        if (HAS_OWN_PROPERTY(this.config, 'vibrate'))\r\n            this.vibrate = this.config.vibrate;\r\n        if (HAS_OWN_PROPERTY(this.config, 'decode'))\r\n            this.decode = this.config.decode;\r\n        if (HAS_OWN_PROPERTY(this.config, 'isBeep'))\r\n            this.isBeep = this.config.isBeep;\r\n        if (HAS_OWN_PROPERTY(this.config, 'deviceActive'))\r\n            this.deviceActive = this.config.deviceActive;\r\n        if (HAS_OWN_PROPERTY(this.config, 'constraints'))\r\n            this.constraints = OVERRIDES('constraints', this.config, MEDIA_STREAM_DEFAULT);\r\n    }\r\n    /**\r\n     * loadAllDevices\r\n     * @private\r\n     * @param {?} as\r\n     * @return {?}\r\n     */\r\n    loadAllDevices(as) {\r\n        navigator.mediaDevices.enumerateDevices().then((/**\r\n         * @param {?} devices\r\n         * @return {?}\r\n         */\r\n        devices => {\r\n            /** @type {?} */\r\n            let cameraDevices = [];\r\n            devices.forEach((/**\r\n             * @param {?} f\r\n             * @return {?}\r\n             */\r\n            f => f.kind == 'videoinput' && cameraDevices.push(f)));\r\n            this.devices.next(cameraDevices);\r\n            if (cameraDevices.length > 0) {\r\n                /** @type {?} */\r\n                const index = Math.max(0, (cameraDevices.length > this.deviceActive ? this.deviceActive : 0));\r\n                this.playDevice(cameraDevices[index].deviceId, as);\r\n            }\r\n            else {\r\n                AS_COMPLETE(as, false, (/** @type {?} */ ('No camera detected.')));\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * drawImage\r\n     * @private\r\n     * @param {?} element\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\r\n    drawImage(element, callback = (/**\r\n     * @return {?}\r\n     */\r\n    () => { })) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Get the canvas element by using the getElementById method.\r\n            /** @type {?} */\r\n            const canvas = this.canvas.nativeElement;\r\n            // Get a 2D drawing context for the canvas.\r\n            /** @type {?} */\r\n            const ctx = (/** @type {?} */ (canvas.getContext('2d', { willReadFrequently: true })));\r\n            // HTMLImageElement size\r\n            if (element instanceof HTMLImageElement) {\r\n                canvas.width = element.naturalWidth;\r\n                canvas.height = element.naturalHeight;\r\n                element.style.visibility = '';\r\n                this.video.nativeElement.style.visibility = 'hidden';\r\n                this.video.nativeElement.style.height = canvas.offsetHeight + 'px';\r\n            }\r\n            // HTMLVideoElement size\r\n            if (element instanceof HTMLVideoElement) {\r\n                canvas.width = element.videoWidth;\r\n                canvas.height = element.videoHeight;\r\n                element.style.visibility = '';\r\n                this.canvas.nativeElement.style.visibility = 'hidden';\r\n            }\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            // Draw image\r\n            ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\r\n            // Data image\r\n            /** @type {?} */\r\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n            // Draw frame\r\n            /** @type {?} */\r\n            const code = yield zbarWasm.scanImageData(imageData);\r\n            if (code && code.length) {\r\n                // Decode\r\n                code.forEach((/**\r\n                 * @param {?} s\r\n                 * @return {?}\r\n                 */\r\n                (s) => s.value = s.decode(this.decode && this.decode.toLocaleLowerCase())));\r\n                // Overlay\r\n                DRAW_RESULT_APPEND_CHILD(code, Object.freeze(this.canvas.nativeElement), this.resultsPanel.nativeElement);\r\n                // To blob and emit data\r\n                /** @type {?} */\r\n                const EMIT_DATA = (/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    this.eventEmit(code);\r\n                    this.dataForResize = code;\r\n                });\r\n                // HTMLImageElement\r\n                if (element instanceof HTMLImageElement) {\r\n                    callback(true);\r\n                    EMIT_DATA();\r\n                    VIBRATE(this.vibrate);\r\n                    PLAY_AUDIO(this.isBeep);\r\n                }\r\n                // HTMLVideoElement\r\n                if (element instanceof HTMLVideoElement) {\r\n                    EMIT_DATA();\r\n                    VIBRATE(this.vibrate);\r\n                    PLAY_AUDIO(this.isBeep);\r\n                }\r\n            }\r\n            else {\r\n                callback(false);\r\n                this.removeCanvas();\r\n                this.dataForResize = code;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * removeCanvas\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    removeCanvas() {\r\n        Object.assign([], this.resultsPanel.nativeElement.childNodes).forEach((/**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        el => this.resultsPanel.nativeElement.removeChild(el)));\r\n    }\r\n    /**\r\n     * status\r\n     * @private\r\n     * @param {?} isStart\r\n     * @param {?} isLoading\r\n     * @return {?}\r\n     */\r\n    status(isStart, isLoading) {\r\n        this.isStart = isStart;\r\n        this.isLoading = isLoading;\r\n    }\r\n    /**\r\n     * eventEmit\r\n     * @private\r\n     * @param {?=} response\r\n     * @return {?}\r\n     */\r\n    eventEmit(response = false) {\r\n        (response !== false) && this.data.next(response || { data: null });\r\n        (response !== false) && this.event.emit(response || { data: null });\r\n    }\r\n    /**\r\n     * Single-thread\r\n     * Loop Recording on Camera\r\n     * Must be destroy request\r\n     * Not using: requestAnimationFrame\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    requestAnimationFrame() {\r\n        this.rAF_ID = setInterval((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\r\n                this.drawImage(this.video.nativeElement);\r\n            }\r\n        }), this.fps);\r\n    }\r\n    /**\r\n     * Status of camera\r\n     * @return {?} boolean\r\n     */\r\n    get isPause() {\r\n        return this.isStart && this.video.nativeElement.paused;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.pause();\r\n    }\r\n}\r\nNgxScannerQrcodeComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'ngx-scanner-qrcode',\r\n                template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`,\r\n                host: { 'class': 'ngx-scanner-qrcode' },\r\n                exportAs: 'scanner',\r\n                inputs: ['src', 'fps', 'vibrate', 'decode', 'isBeep', 'deviceActive', 'config', 'constraints'],\r\n                outputs: ['event'],\r\n                queries: {\r\n                    video: new ViewChild('video'),\r\n                    canvas: new ViewChild('canvas'),\r\n                    resultsPanel: new ViewChild('resultsPanel')\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;color:red;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute}.qrcode-tooltip-temp{bottom:0;left:50%;padding:5px;color:#fff;text-align:left;display:none;max-width:450px;border-radius:5px;width:-moz-max-content;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}\"]\r\n            }] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nconst ScannerQRCodeSymbolType = {\r\n    ScannerQRCode_NONE: 0,\r\n    ScannerQRCode_PARTIAL: 1,\r\n    ScannerQRCode_EAN2: 2,\r\n    ScannerQRCode_EAN5: 5,\r\n    ScannerQRCode_EAN8: 8,\r\n    ScannerQRCode_UPCE: 9,\r\n    ScannerQRCode_ISBN10: 10,\r\n    ScannerQRCode_UPCA: 12,\r\n    ScannerQRCode_EAN13: 13,\r\n    ScannerQRCode_ISBN13: 14,\r\n    ScannerQRCode_COMPOSITE: 15,\r\n    ScannerQRCode_I25: 25,\r\n    ScannerQRCode_DATABAR: 34,\r\n    ScannerQRCode_DATABAR_EXP: 35,\r\n    ScannerQRCode_CODABAR: 38,\r\n    ScannerQRCode_CODE39: 39,\r\n    ScannerQRCode_PDF417: 57,\r\n    ScannerQRCode_QRCODE: 64,\r\n    ScannerQRCode_SQCODE: 80,\r\n    ScannerQRCode_CODE93: 93,\r\n    ScannerQRCode_CODE128: 128,\r\n    /*\r\n     * Please see _ScannerQRCode_get_symbol_hash() if adding\r\n     * anything after 128\r\n     */\r\n    /** mask for base symbol type.\r\n     * @deprecated in 0.11, remove this from existing code\r\n     */\r\n    ScannerQRCode_SYMBOL: 255,\r\n    /** 2-digit add-on flag.\r\n     * @deprecated in 0.11, a ::ScannerQRCode_EAN2 component is used for\r\n     * 2-digit GS1 add-ons\r\n     */\r\n    ScannerQRCode_ADDON2: 512,\r\n    /** 5-digit add-on flag.\r\n     * @deprecated in 0.11, a ::ScannerQRCode_EAN5 component is used for\r\n     * 5-digit GS1 add-ons\r\n     */\r\n    ScannerQRCode_ADDON5: 1280,\r\n    /** add-on flag mask.\r\n     * @deprecated in 0.11, GS1 add-ons are represented using composite\r\n     * symbols of type ::ScannerQRCode_COMPOSITE; add-on components use ::ScannerQRCode_EAN2\r\n     * or ::ScannerQRCode_EAN5\r\n     */\r\n    ScannerQRCode_ADDON: 1792,\r\n};\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_NONE] = 'ScannerQRCode_NONE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PARTIAL] = 'ScannerQRCode_PARTIAL';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN2] = 'ScannerQRCode_EAN2';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN5] = 'ScannerQRCode_EAN5';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN8] = 'ScannerQRCode_EAN8';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCE] = 'ScannerQRCode_UPCE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN10] = 'ScannerQRCode_ISBN10';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_UPCA] = 'ScannerQRCode_UPCA';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_EAN13] = 'ScannerQRCode_EAN13';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ISBN13] = 'ScannerQRCode_ISBN13';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_COMPOSITE] = 'ScannerQRCode_COMPOSITE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_I25] = 'ScannerQRCode_I25';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR] = 'ScannerQRCode_DATABAR';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_DATABAR_EXP] = 'ScannerQRCode_DATABAR_EXP';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODABAR] = 'ScannerQRCode_CODABAR';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE39] = 'ScannerQRCode_CODE39';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_PDF417] = 'ScannerQRCode_PDF417';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_QRCODE] = 'ScannerQRCode_QRCODE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SQCODE] = 'ScannerQRCode_SQCODE';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE93] = 'ScannerQRCode_CODE93';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_CODE128] = 'ScannerQRCode_CODE128';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_SYMBOL] = 'ScannerQRCode_SYMBOL';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON2] = 'ScannerQRCode_ADDON2';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON5] = 'ScannerQRCode_ADDON5';\r\nScannerQRCodeSymbolType[ScannerQRCodeSymbolType.ScannerQRCode_ADDON] = 'ScannerQRCode_ADDON';\r\n/** @enum {number} */\r\nconst ScannerQRCodeConfigType = {\r\n    ScannerQRCode_CFG_ENABLE: 0,\r\n    ScannerQRCode_CFG_ADD_CHECK: 1,\r\n    ScannerQRCode_CFG_EMIT_CHECK: 2,\r\n    ScannerQRCode_CFG_ASCII: 3,\r\n    ScannerQRCode_CFG_BINARY: 4,\r\n    ScannerQRCode_CFG_NUM: 5,\r\n    ScannerQRCode_CFG_MIN_LEN: 32,\r\n    ScannerQRCode_CFG_MAX_LEN: 33,\r\n    ScannerQRCode_CFG_UNCERTAINTY: 64,\r\n    ScannerQRCode_CFG_POSITION: 128,\r\n    ScannerQRCode_CFG_TEST_INVERTED: 129,\r\n    ScannerQRCode_CFG_X_DENSITY: 256,\r\n    ScannerQRCode_CFG_Y_DENSITY: 257,\r\n};\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ENABLE] = 'ScannerQRCode_CFG_ENABLE';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ADD_CHECK] = 'ScannerQRCode_CFG_ADD_CHECK';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_EMIT_CHECK] = 'ScannerQRCode_CFG_EMIT_CHECK';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_ASCII] = 'ScannerQRCode_CFG_ASCII';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_BINARY] = 'ScannerQRCode_CFG_BINARY';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_NUM] = 'ScannerQRCode_CFG_NUM';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MIN_LEN] = 'ScannerQRCode_CFG_MIN_LEN';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_MAX_LEN] = 'ScannerQRCode_CFG_MAX_LEN';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_UNCERTAINTY] = 'ScannerQRCode_CFG_UNCERTAINTY';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_POSITION] = 'ScannerQRCode_CFG_POSITION';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_TEST_INVERTED] = 'ScannerQRCode_CFG_TEST_INVERTED';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_X_DENSITY] = 'ScannerQRCode_CFG_X_DENSITY';\r\nScannerQRCodeConfigType[ScannerQRCodeConfigType.ScannerQRCode_CFG_Y_DENSITY] = 'ScannerQRCode_CFG_Y_DENSITY';\r\n/** @enum {number} */\r\nconst ScannerQRCodeOrientation = {\r\n    ScannerQRCode_ORIENT_UNKNOWN: -1,\r\n    ScannerQRCode_ORIENT_UP: 0,\r\n    ScannerQRCode_ORIENT_RIGHT: 1,\r\n    ScannerQRCode_ORIENT_DOWN: 2,\r\n    ScannerQRCode_ORIENT_LEFT: 3,\r\n};\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UNKNOWN] = 'ScannerQRCode_ORIENT_UNKNOWN';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_UP] = 'ScannerQRCode_ORIENT_UP';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_RIGHT] = 'ScannerQRCode_ORIENT_RIGHT';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_DOWN] = 'ScannerQRCode_ORIENT_DOWN';\r\nScannerQRCodeOrientation[ScannerQRCodeOrientation.ScannerQRCode_ORIENT_LEFT] = 'ScannerQRCode_ORIENT_LEFT';\r\nclass ScannerQRCodeTypePointer {\r\n    /**\r\n     * @param {?} ptr\r\n     * @param {?} buf\r\n     */\r\n    constructor(ptr, buf) {\r\n        this.ptr = ptr;\r\n        this.ptr32 = ptr >> 2;\r\n        this.buf = buf;\r\n        this.HEAP8 = new Int8Array(buf);\r\n        this.HEAPU32 = new Uint32Array(buf);\r\n        this.HEAP32 = new Int32Array(buf);\r\n    }\r\n}\r\nclass ScannerQRCodeSymbolPtr extends ScannerQRCodeTypePointer {\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get type() {\r\n        return (/** @type {?} */ (this.HEAPU32[this.ptr32]));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get data() {\r\n        /** @type {?} */\r\n        const len = this.HEAPU32[this.ptr32 + 4];\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 5];\r\n        return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get points() {\r\n        /** @type {?} */\r\n        const len = this.HEAPU32[this.ptr32 + 7];\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 8];\r\n        /** @type {?} */\r\n        const ptr32 = ptr >> 2;\r\n        /** @type {?} */\r\n        const res = [];\r\n        for (let i = 0; i < len; ++i) {\r\n            /** @type {?} */\r\n            const x = this.HEAP32[ptr32 + i * 2];\r\n            /** @type {?} */\r\n            const y = this.HEAP32[ptr32 + i * 2 + 1];\r\n            res.push((/** @type {?} */ ({ x, y })));\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get orientation() {\r\n        return this.HEAP32[this.ptr32 + 9];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get next() {\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 11];\r\n        if (!ptr)\r\n            return null;\r\n        return new ScannerQRCodeSymbolPtr(ptr, this.buf);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get time() {\r\n        return this.HEAPU32[this.ptr32 + 13];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get cacheCount() {\r\n        return this.HEAP32[this.ptr32 + 14];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get quality() {\r\n        return this.HEAP32[this.ptr32 + 15];\r\n    }\r\n}\r\nclass SymbolSetPtr extends ScannerQRCodeTypePointer {\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get head() {\r\n        /** @type {?} */\r\n        const ptr = this.HEAPU32[this.ptr32 + 2];\r\n        if (!ptr)\r\n            return null;\r\n        return new ScannerQRCodeSymbolPtr(ptr, this.buf);\r\n    }\r\n}\r\nclass ScannerQRCodeResult {\r\n    /**\r\n     * @private\r\n     * @param {?} ptr\r\n     */\r\n    constructor(ptr) {\r\n        this.value = '';\r\n        this.type = ptr.type;\r\n        this.typeName = ScannerQRCodeSymbolType[this.type];\r\n        this.data = ptr.data;\r\n        this.points = ptr.points;\r\n        this.orientation = ptr.orientation;\r\n        this.time = ptr.time;\r\n        this.cacheCount = ptr.cacheCount;\r\n        this.quality = ptr.quality;\r\n    }\r\n    /**\r\n     * @param {?} ptr\r\n     * @param {?} buf\r\n     * @return {?}\r\n     */\r\n    static createSymbolsFromPtr(ptr, buf) {\r\n        if (ptr == 0)\r\n            return [];\r\n        /** @type {?} */\r\n        const set = new SymbolSetPtr(ptr, buf);\r\n        /** @type {?} */\r\n        let symbol = set.head;\r\n        /** @type {?} */\r\n        const res = [];\r\n        while (symbol !== null) {\r\n            res.push(new ScannerQRCodeResult(symbol));\r\n            symbol = symbol.next;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @param {?=} encoding\r\n     * @return {?}\r\n     */\r\n    decode(encoding) {\r\n        /** @type {?} */\r\n        const decoder = new TextDecoder(encoding);\r\n        return decoder.decode(this.data);\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxScannerQrcodeModule {\r\n}\r\nNgxScannerQrcodeModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [NgxScannerQrcodeComponent],\r\n                exports: [NgxScannerQrcodeComponent],\r\n                providers: [NgxScannerQrcodeService],\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxScannerQrcodeService, NgxScannerQrcodeComponent, ScannerQRCodeSymbolType, ScannerQRCodeConfigType, ScannerQRCodeOrientation, ScannerQRCodeResult, NgxScannerQrcodeModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}